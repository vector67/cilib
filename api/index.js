Index.PACKAGES = {"cilib.syntax" : [{"name" : "cilib.syntax.algorithm", "shortDescription" : "", "object" : "cilib\/syntax\/algorithm$.html", "members_object" : [{"label" : "ToAlgorithmSOps", "tail" : "", "member" : "cilib.syntax.algorithm.ToAlgorithmSOps", "link" : "cilib\/syntax\/algorithm$.html#ToAlgorithmSOps[A,B,C,S]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "ToAlgorithmOps", "tail" : "", "member" : "cilib.syntax.algorithm.ToAlgorithmOps", "link" : "cilib\/syntax\/algorithm$.html#ToAlgorithmOps[A,B,C]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/syntax\/algorithm$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/syntax\/algorithm$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/syntax\/algorithm$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/syntax\/algorithm$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/syntax\/algorithm$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/syntax\/algorithm$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/syntax\/algorithm$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/syntax\/algorithm$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/syntax\/algorithm$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/syntax\/algorithm$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/syntax\/algorithm$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/syntax\/algorithm$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/syntax\/algorithm$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/syntax\/algorithm$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/syntax\/algorithm$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/syntax\/algorithm$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/syntax\/algorithm$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/syntax\/algorithm$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/syntax\/algorithm$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.syntax.dotprod", "shortDescription" : "", "object" : "cilib\/syntax\/dotprod$.html", "members_object" : [{"label" : "AlgebraSyntax", "tail" : "", "member" : "cilib.syntax.dotprod.AlgebraSyntax", "link" : "cilib\/syntax\/dotprod$.html#AlgebraSyntax[F[_],A]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "DotProdSyntax", "tail" : "", "member" : "cilib.syntax.dotprod.DotProdSyntax", "link" : "cilib\/syntax\/dotprod$.html#DotProdSyntax[F[_],A]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/syntax\/dotprod$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/syntax\/dotprod$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/syntax\/dotprod$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/syntax\/dotprod$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/syntax\/dotprod$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/syntax\/dotprod$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/syntax\/dotprod$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/syntax\/dotprod$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/syntax\/dotprod$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/syntax\/dotprod$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/syntax\/dotprod$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/syntax\/dotprod$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/syntax\/dotprod$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/syntax\/dotprod$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/syntax\/dotprod$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/syntax\/dotprod$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/syntax\/dotprod$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/syntax\/dotprod$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/syntax\/dotprod$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.syntax.step", "shortDescription" : "", "object" : "cilib\/syntax\/step$.html", "members_object" : [{"label" : "StepOps", "tail" : "", "member" : "cilib.syntax.step.StepOps", "link" : "cilib\/syntax\/step$.html#StepOps[A,B]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/syntax\/step$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/syntax\/step$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/syntax\/step$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/syntax\/step$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/syntax\/step$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/syntax\/step$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/syntax\/step$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/syntax\/step$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/syntax\/step$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/syntax\/step$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/syntax\/step$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/syntax\/step$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/syntax\/step$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/syntax\/step$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/syntax\/step$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/syntax\/step$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/syntax\/step$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/syntax\/step$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/syntax\/step$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "cilib.algebra" : [{"name" : "cilib.algebra.Algebra", "shortDescription" : "", "object" : "cilib\/algebra\/Algebra$.html", "members_object" : [{"label" : "orthonormalize", "tail" : "(vs: NonEmptyList[F[A]])(arg0: Functor[F], arg1: Foldable1[F], arg2: NRoot[A], D: DotProd[F, A], M: Module[F[A], Double], A: Field[A]): NonEmptyList[F[A]]", "member" : "cilib.algebra.Algebra.orthonormalize", "link" : "cilib\/algebra\/Algebra$.html#orthonormalize[F[_],A](vs:scalaz.NonEmptyList[F[A]])(implicitevidence$2:scalaz.Functor[F],implicitevidence$3:scalaz.Foldable1[F],implicitevidence$4:spire.algebra.NRoot[A],implicitD:cilib.algebra.DotProd[F,A],implicitM:spire.algebra.Module[F[A],Double],implicitA:spire.algebra.Field[A]):scalaz.NonEmptyList[F[A]]", "kind" : "def"}, {"label" : "project", "tail" : "(x: F[A], other: F[A])(D: DotProd[F, A], F: Functor[F], F2: Field[A], M: Module[F[A], Double]): F[A]", "member" : "cilib.algebra.Algebra.project", "link" : "cilib\/algebra\/Algebra$.html#project[F[_],A](x:F[A],other:F[A])(implicitD:cilib.algebra.DotProd[F,A],implicitF:scalaz.Functor[F],implicitF2:spire.algebra.Field[A],implicitM:spire.algebra.Module[F[A],Double]):F[A]", "kind" : "def"}, {"label" : "orthogonalize", "tail" : "(x: F[A], vs: List[F[A]])(arg0: Functor[F], D: DotProd[F, A], F: Field[A], M: Module[F[A], Double]): F[A]", "member" : "cilib.algebra.Algebra.orthogonalize", "link" : "cilib\/algebra\/Algebra$.html#orthogonalize[F[_],A](x:F[A],vs:List[F[A]])(implicitevidence$1:scalaz.Functor[F],implicitD:cilib.algebra.DotProd[F,A],implicitF:spire.algebra.Field[A],implicitM:spire.algebra.Module[F[A],Double]):F[A]", "kind" : "def"}, {"label" : "meanVector", "tail" : "(xs: NonEmptyList[F[A]])(M: Module[F[A], Double]): F[A]", "member" : "cilib.algebra.Algebra.meanVector", "link" : "cilib\/algebra\/Algebra$.html#meanVector[F[_],A](xs:scalaz.NonEmptyList[F[A]])(implicitM:spire.algebra.Module[F[A],Double]):F[A]", "kind" : "def"}, {"label" : "vectorSum", "tail" : "(xs: NonEmptyList[F[A]])(M: Module[F[A], Double]): F[A]", "member" : "cilib.algebra.Algebra.vectorSum", "link" : "cilib\/algebra\/Algebra$.html#vectorSum[F[_],A](xs:scalaz.NonEmptyList[F[A]])(implicitM:spire.algebra.Module[F[A],Double]):F[A]", "kind" : "def"}, {"label" : "pointwise", "tail" : "(a: F[A], b: F[A])(P: Pointwise[F, A]): F[A]", "member" : "cilib.algebra.Algebra.pointwise", "link" : "cilib\/algebra\/Algebra$.html#pointwise[F[_],A](a:F[A],b:F[A])(implicitP:cilib.algebra.Pointwise[F,A]):F[A]", "kind" : "def"}, {"label" : "distance", "tail" : "(a: F[A], b: F[A])(D: DotProd[F, A], M: Module[F[A], Double]): Double", "member" : "cilib.algebra.Algebra.distance", "link" : "cilib\/algebra\/Algebra$.html#distance[F[_],A](a:F[A],b:F[A])(implicitD:cilib.algebra.DotProd[F,A],implicitM:spire.algebra.Module[F[A],Double]):Double", "kind" : "def"}, {"label" : "magnitude", "tail" : "(a: F[A])(D: DotProd[F, A]): Double", "member" : "cilib.algebra.Algebra.magnitude", "link" : "cilib\/algebra\/Algebra$.html#magnitude[F[_],A](a:F[A])(implicitD:cilib.algebra.DotProd[F,A]):Double", "kind" : "def"}, {"label" : "normalize", "tail" : "(a: F[A])(M: Module[F[A], Double], D: DotProd[F, A]): F[A]", "member" : "cilib.algebra.Algebra.normalize", "link" : "cilib\/algebra\/Algebra$.html#normalize[F[_],A](a:F[A])(implicitM:spire.algebra.Module[F[A],Double],implicitD:cilib.algebra.DotProd[F,A]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/algebra\/Algebra$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/algebra\/Algebra$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/algebra\/Algebra$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/algebra\/Algebra$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/algebra\/Algebra$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/algebra\/Algebra$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/algebra\/Algebra$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/Algebra$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/Algebra$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/Algebra$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/algebra\/Algebra$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/algebra\/Algebra$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/algebra\/Algebra$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/algebra\/Algebra$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/algebra\/Algebra$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/algebra\/Algebra$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/algebra\/Algebra$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/algebra\/Algebra$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/algebra\/Algebra$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.algebra.CrossProd", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/algebra\/CrossProd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/algebra\/CrossProd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/algebra\/CrossProd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/algebra\/CrossProd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/algebra\/CrossProd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/algebra\/CrossProd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/algebra\/CrossProd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/CrossProd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/CrossProd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/CrossProd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/algebra\/CrossProd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/algebra\/CrossProd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/algebra\/CrossProd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/algebra\/CrossProd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/algebra\/CrossProd.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/algebra\/CrossProd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/algebra\/CrossProd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/algebra\/CrossProd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/algebra\/CrossProd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cross", "tail" : "(a: F[A], b: F[A]): F[A]", "member" : "cilib.algebra.CrossProd.cross", "link" : "cilib\/algebra\/CrossProd.html#cross(a:F[A],b:F[A]):F[A]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "cilib\/algebra\/CrossProd.html", "kind" : "trait"}, {"name" : "cilib.algebra.DotProd", "members_trait" : [{"label" : "len", "tail" : "(a: F[A]): Double", "member" : "cilib.algebra.DotProd.len", "link" : "cilib\/algebra\/DotProd.html#len(a:F[A]):Double", "kind" : "def"}, {"label" : "lensqr", "tail" : "(a: F[A]): Double", "member" : "cilib.algebra.DotProd.lensqr", "link" : "cilib\/algebra\/DotProd.html#lensqr(a:F[A]):Double", "kind" : "def"}, {"label" : "norm", "tail" : "(a: F[A]): Double", "member" : "cilib.algebra.DotProd.norm", "link" : "cilib\/algebra\/DotProd.html#norm(a:F[A]):Double", "kind" : "def"}, {"label" : "normsqr", "tail" : "(a: F[A]): Double", "member" : "cilib.algebra.DotProd.normsqr", "link" : "cilib\/algebra\/DotProd.html#normsqr(a:F[A]):Double", "kind" : "def"}, {"label" : "∙", "tail" : "(a: F[A], b: F[A]): Double", "member" : "cilib.algebra.DotProd.∙", "link" : "cilib\/algebra\/DotProd.html#∙(a:F[A],b:F[A]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/algebra\/DotProd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/algebra\/DotProd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/algebra\/DotProd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/algebra\/DotProd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/algebra\/DotProd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/algebra\/DotProd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/algebra\/DotProd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/DotProd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/DotProd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/DotProd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/algebra\/DotProd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/algebra\/DotProd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/algebra\/DotProd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/algebra\/DotProd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/algebra\/DotProd.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/algebra\/DotProd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/algebra\/DotProd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/algebra\/DotProd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/algebra\/DotProd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dot", "tail" : "(a: F[A], b: F[A]): Double", "member" : "cilib.algebra.DotProd.dot", "link" : "cilib\/algebra\/DotProd.html#dot(a:F[A],b:F[A]):Double", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "cilib\/algebra\/DotProd.html", "kind" : "trait"}, {"name" : "cilib.algebra.Orthongonal", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/algebra\/Orthongonal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/algebra\/Orthongonal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/algebra\/Orthongonal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/algebra\/Orthongonal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/algebra\/Orthongonal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/algebra\/Orthongonal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/algebra\/Orthongonal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/Orthongonal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/Orthongonal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/Orthongonal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/algebra\/Orthongonal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/algebra\/Orthongonal.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/algebra\/Orthongonal.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/algebra\/Orthongonal.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/algebra\/Orthongonal.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/algebra\/Orthongonal.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/algebra\/Orthongonal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/algebra\/Orthongonal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/algebra\/Orthongonal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "cilib\/algebra\/Orthongonal.html", "kind" : "trait"}, {"name" : "cilib.algebra.Pointwise", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/algebra\/Pointwise.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/algebra\/Pointwise.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/algebra\/Pointwise.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/algebra\/Pointwise.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/algebra\/Pointwise.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/algebra\/Pointwise.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/algebra\/Pointwise.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/Pointwise.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/Pointwise.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/algebra\/Pointwise.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/algebra\/Pointwise.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/algebra\/Pointwise.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/algebra\/Pointwise.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/algebra\/Pointwise.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/algebra\/Pointwise.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/algebra\/Pointwise.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/algebra\/Pointwise.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/algebra\/Pointwise.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/algebra\/Pointwise.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "pointwise", "tail" : "(a: F[A], b: F[A]): F[A]", "member" : "cilib.algebra.Pointwise.pointwise", "link" : "cilib\/algebra\/Pointwise.html#pointwise(a:F[A],b:F[A]):F[A]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "cilib\/algebra\/Pointwise.html", "kind" : "trait"}], "cilib.io" : [{"name" : "cilib.io.ColumnNames", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/io\/ColumnNames.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/io\/ColumnNames.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/io\/ColumnNames.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/io\/ColumnNames.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/io\/ColumnNames.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/io\/ColumnNames.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/io\/ColumnNames.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/io\/ColumnNames.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/io\/ColumnNames.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/io\/ColumnNames.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/io\/ColumnNames.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/io\/ColumnNames.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/io\/ColumnNames.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/io\/ColumnNames.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/io\/ColumnNames.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/io\/ColumnNames.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/io\/ColumnNames.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/io\/ColumnNames.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/io\/ColumnNames.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "names", "tail" : "(a: A): List[String]", "member" : "cilib.io.ColumnNames.names", "link" : "cilib\/io\/ColumnNames.html#names(a:A):List[String]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "cilib\/io\/ColumnNames$.html", "members_object" : [{"label" : "genericColumnNames", "tail" : "(generic: Aux[A, H], hNamer: Lazy[ColumnNames[H]]): ColumnNames[A]", "member" : "cilib.io.ColumnNames.genericColumnNames", "link" : "cilib\/io\/ColumnNames$.html#genericColumnNames[A,H<:shapeless.HList](implicitgeneric:shapeless.LabelledGeneric.Aux[A,H],implicithNamer:shapeless.Lazy[cilib.io.ColumnNames[H]]):cilib.io.ColumnNames[A]", "kind" : "implicit def"}, {"label" : "hconsColumnNames", "tail" : "(witness: Aux[K], tNamer: ColumnNames[T]): ColumnNames[::[FieldType[K, H], T]]", "member" : "cilib.io.ColumnNames.hconsColumnNames", "link" : "cilib\/io\/ColumnNames$.html#hconsColumnNames[K<:Symbol,H,T<:shapeless.HList](implicitwitness:shapeless.Witness.Aux[K],implicittNamer:cilib.io.ColumnNames[T]):cilib.io.ColumnNames[shapeless.labelled.FieldType[K,H]::T]", "kind" : "implicit def"}, {"label" : "hnilColumnsNames", "tail" : ": ColumnNames[HNil]", "member" : "cilib.io.ColumnNames.hnilColumnsNames", "link" : "cilib\/io\/ColumnNames$.html#hnilColumnsNames:cilib.io.ColumnNames[shapeless.HNil]", "kind" : "implicit val"}, {"label" : "foldableCoilumnNames", "tail" : "(F: Foldable[F], A: ColumnNames[A]): ColumnNames[F[A]]", "member" : "cilib.io.ColumnNames.foldableCoilumnNames", "link" : "cilib\/io\/ColumnNames$.html#foldableCoilumnNames[F[_],A](implicitF:scalaz.Foldable[F],implicitA:cilib.io.ColumnNames[A]):cilib.io.ColumnNames[F[A]]", "kind" : "implicit def"}, {"label" : "stringColumnNames", "tail" : ": ColumnNames[String]", "member" : "cilib.io.ColumnNames.stringColumnNames", "link" : "cilib\/io\/ColumnNames$.html#stringColumnNames:cilib.io.ColumnNames[String]", "kind" : "implicit val"}, {"label" : "doubleColumnNames", "tail" : ": ColumnNames[Double]", "member" : "cilib.io.ColumnNames.doubleColumnNames", "link" : "cilib\/io\/ColumnNames$.html#doubleColumnNames:cilib.io.ColumnNames[Double]", "kind" : "implicit val"}, {"label" : "floatColumnNames", "tail" : ": ColumnNames[Float]", "member" : "cilib.io.ColumnNames.floatColumnNames", "link" : "cilib\/io\/ColumnNames$.html#floatColumnNames:cilib.io.ColumnNames[Float]", "kind" : "implicit val"}, {"label" : "longColumnNames", "tail" : ": ColumnNames[Long]", "member" : "cilib.io.ColumnNames.longColumnNames", "link" : "cilib\/io\/ColumnNames$.html#longColumnNames:cilib.io.ColumnNames[Long]", "kind" : "implicit val"}, {"label" : "intColumnNames", "tail" : ": ColumnNames[Int]", "member" : "cilib.io.ColumnNames.intColumnNames", "link" : "cilib\/io\/ColumnNames$.html#intColumnNames:cilib.io.ColumnNames[Int]", "kind" : "implicit val"}, {"label" : "shortColumnNames", "tail" : ": ColumnNames[Short]", "member" : "cilib.io.ColumnNames.shortColumnNames", "link" : "cilib\/io\/ColumnNames$.html#shortColumnNames:cilib.io.ColumnNames[Short]", "kind" : "implicit val"}, {"label" : "byteColumnNames", "tail" : ": ColumnNames[Byte]", "member" : "cilib.io.ColumnNames.byteColumnNames", "link" : "cilib\/io\/ColumnNames$.html#byteColumnNames:cilib.io.ColumnNames[Byte]", "kind" : "implicit val"}, {"label" : "booleanColumnNames", "tail" : ": ColumnNames[Boolean]", "member" : "cilib.io.ColumnNames.booleanColumnNames", "link" : "cilib\/io\/ColumnNames$.html#booleanColumnNames:cilib.io.ColumnNames[Boolean]", "kind" : "implicit val"}, {"label" : "columnName", "tail" : "(f: (A) ⇒ List[String]): ColumnNames[A]", "member" : "cilib.io.ColumnNames.columnName", "link" : "cilib\/io\/ColumnNames$.html#columnName[A](f:A=>List[String]):cilib.io.ColumnNames[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(c: ColumnNames[A]): ColumnNames[A]", "member" : "cilib.io.ColumnNames.apply", "link" : "cilib\/io\/ColumnNames$.html#apply[A](implicitc:cilib.io.ColumnNames[A]):cilib.io.ColumnNames[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/io\/ColumnNames$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/io\/ColumnNames$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/io\/ColumnNames$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/io\/ColumnNames$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/io\/ColumnNames$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/io\/ColumnNames$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/io\/ColumnNames$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/io\/ColumnNames$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/io\/ColumnNames$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/io\/ColumnNames$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/io\/ColumnNames$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/io\/ColumnNames$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/io\/ColumnNames$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/io\/ColumnNames$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/io\/ColumnNames$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/io\/ColumnNames$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/io\/ColumnNames$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/io\/ColumnNames$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/io\/ColumnNames$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cilib\/io\/ColumnNames.html", "kind" : "trait"}, {"name" : "cilib.io.EncodeCsv", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/io\/EncodeCsv.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/io\/EncodeCsv.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/io\/EncodeCsv.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/io\/EncodeCsv.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/io\/EncodeCsv.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/io\/EncodeCsv.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/io\/EncodeCsv.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/io\/EncodeCsv.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/io\/EncodeCsv.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/io\/EncodeCsv.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/io\/EncodeCsv.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/io\/EncodeCsv.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/io\/EncodeCsv.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/io\/EncodeCsv.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/io\/EncodeCsv.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/io\/EncodeCsv.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/io\/EncodeCsv.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/io\/EncodeCsv.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/io\/EncodeCsv.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "encode", "tail" : "(a: A): List[String]", "member" : "cilib.io.EncodeCsv.encode", "link" : "cilib\/io\/EncodeCsv.html#encode(a:A):List[String]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "cilib\/io\/EncodeCsv$.html", "members_object" : [{"label" : "write", "tail" : "(a: A)(enc: EncodeCsv[A]): String", "member" : "cilib.io.EncodeCsv.write", "link" : "cilib\/io\/EncodeCsv$.html#write[A](a:A)(implicitenc:cilib.io.EncodeCsv[A]):String", "kind" : "def"}, {"label" : "hconsToEncodeCsv", "tail" : "(hEncode: EncodeCsv[H], tEncode: EncodeCsv[T]): EncodeCsv[::[H, T]]", "member" : "cilib.io.EncodeCsv.hconsToEncodeCsv", "link" : "cilib\/io\/EncodeCsv$.html#hconsToEncodeCsv[H,T<:shapeless.HList](implicithEncode:cilib.io.EncodeCsv[H],implicittEncode:cilib.io.EncodeCsv[T]):cilib.io.EncodeCsv[H::T]", "kind" : "implicit def"}, {"label" : "hnilToEncodeCsv", "tail" : ": EncodeCsv[HNil]", "member" : "cilib.io.EncodeCsv.hnilToEncodeCsv", "link" : "cilib\/io\/EncodeCsv$.html#hnilToEncodeCsv:cilib.io.EncodeCsv[shapeless.HNil]", "kind" : "implicit val"}, {"label" : "genericEncodeCsv", "tail" : "(gen: Aux[A, R], enc: Lazy[EncodeCsv[R]]): EncodeCsv[A]", "member" : "cilib.io.EncodeCsv.genericEncodeCsv", "link" : "cilib\/io\/EncodeCsv$.html#genericEncodeCsv[A,R](implicitgen:shapeless.Generic.Aux[A,R],implicitenc:shapeless.Lazy[cilib.io.EncodeCsv[R]]):cilib.io.EncodeCsv[A]", "kind" : "implicit def"}, {"label" : "envEncodeCsv", "tail" : ": EncodeCsv[Env]", "member" : "cilib.io.EncodeCsv.envEncodeCsv", "link" : "cilib\/io\/EncodeCsv$.html#envEncodeCsv:cilib.io.EncodeCsv[cilib.exec.Env]", "kind" : "implicit val"}, {"label" : "foldableEncodeCsv", "tail" : "(F: Foldable[F], A: EncodeCsv[A]): EncodeCsv[F[A]]", "member" : "cilib.io.EncodeCsv.foldableEncodeCsv", "link" : "cilib\/io\/EncodeCsv$.html#foldableEncodeCsv[F[_],A](implicitF:scalaz.Foldable[F],implicitA:cilib.io.EncodeCsv[A]):cilib.io.EncodeCsv[F[A]]", "kind" : "implicit def"}, {"label" : "stringEncodeCsv", "tail" : ": EncodeCsv[String]", "member" : "cilib.io.EncodeCsv.stringEncodeCsv", "link" : "cilib\/io\/EncodeCsv$.html#stringEncodeCsv:cilib.io.EncodeCsv[String]", "kind" : "implicit val"}, {"label" : "doubleEncodeCsv", "tail" : ": EncodeCsv[Double]", "member" : "cilib.io.EncodeCsv.doubleEncodeCsv", "link" : "cilib\/io\/EncodeCsv$.html#doubleEncodeCsv:cilib.io.EncodeCsv[Double]", "kind" : "implicit val"}, {"label" : "floatEncodeCsv", "tail" : ": EncodeCsv[Float]", "member" : "cilib.io.EncodeCsv.floatEncodeCsv", "link" : "cilib\/io\/EncodeCsv$.html#floatEncodeCsv:cilib.io.EncodeCsv[Float]", "kind" : "implicit val"}, {"label" : "longEncodeCsv", "tail" : ": EncodeCsv[Long]", "member" : "cilib.io.EncodeCsv.longEncodeCsv", "link" : "cilib\/io\/EncodeCsv$.html#longEncodeCsv:cilib.io.EncodeCsv[Long]", "kind" : "implicit val"}, {"label" : "intEncodeCsv", "tail" : ": EncodeCsv[Int]", "member" : "cilib.io.EncodeCsv.intEncodeCsv", "link" : "cilib\/io\/EncodeCsv$.html#intEncodeCsv:cilib.io.EncodeCsv[Int]", "kind" : "implicit val"}, {"label" : "shortEncodeCsv", "tail" : ": EncodeCsv[Short]", "member" : "cilib.io.EncodeCsv.shortEncodeCsv", "link" : "cilib\/io\/EncodeCsv$.html#shortEncodeCsv:cilib.io.EncodeCsv[Short]", "kind" : "implicit val"}, {"label" : "byteEncodeCsv", "tail" : ": EncodeCsv[Byte]", "member" : "cilib.io.EncodeCsv.byteEncodeCsv", "link" : "cilib\/io\/EncodeCsv$.html#byteEncodeCsv:cilib.io.EncodeCsv[Byte]", "kind" : "implicit val"}, {"label" : "booleanCsvEncode", "tail" : ": EncodeCsv[Boolean]", "member" : "cilib.io.EncodeCsv.booleanCsvEncode", "link" : "cilib\/io\/EncodeCsv$.html#booleanCsvEncode:cilib.io.EncodeCsv[Boolean]", "kind" : "implicit val"}, {"label" : "apply", "tail" : "(f: (A) ⇒ List[String]): EncodeCsv[A]", "member" : "cilib.io.EncodeCsv.apply", "link" : "cilib\/io\/EncodeCsv$.html#apply[A](f:A=>List[String]):cilib.io.EncodeCsv[A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/io\/EncodeCsv$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/io\/EncodeCsv$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/io\/EncodeCsv$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/io\/EncodeCsv$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/io\/EncodeCsv$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/io\/EncodeCsv$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/io\/EncodeCsv$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/io\/EncodeCsv$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/io\/EncodeCsv$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/io\/EncodeCsv$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/io\/EncodeCsv$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/io\/EncodeCsv$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/io\/EncodeCsv$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/io\/EncodeCsv$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/io\/EncodeCsv$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/io\/EncodeCsv$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/io\/EncodeCsv$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/io\/EncodeCsv$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/io\/EncodeCsv$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cilib\/io\/EncodeCsv.html", "kind" : "trait"}], "cilib.ga" : [{"name" : "cilib.ga.GA", "shortDescription" : "", "object" : "cilib\/ga\/GA$.html", "members_object" : [{"label" : "randomSearch", "tail" : "(parentSelection: (NonEmptyList[Individual[S]]) ⇒ RVar[List[Individual[S]]], distribution: (Double) ⇒ RVar[Double]): (NonEmptyList[Individual[S]]) ⇒ (Individual[S]) ⇒ Step[Double, List[Individual[S]]]", "member" : "cilib.ga.GA.randomSearch", "link" : "cilib\/ga\/GA$.html#randomSearch[S](parentSelection:scalaz.NonEmptyList[cilib.ga.Individual[S]]=>cilib.RVar[List[cilib.ga.Individual[S]]],distribution:Double=>cilib.RVar[Double]):scalaz.NonEmptyList[cilib.ga.Individual[S]]=>(cilib.ga.Individual[S]=>cilib.Step[Double,List[cilib.ga.Individual[S]]])", "kind" : "def"}, {"label" : "ga", "tail" : "(p_c: Double, parentSelection: (NonEmptyList[Individual[S]]) ⇒ RVar[List[Individual[S]]], crossover: (List[Individual[S]]) ⇒ RVar[List[Individual[S]]], mutation: (List[Individual[S]]) ⇒ RVar[List[Individual[S]]]): (NonEmptyList[Individual[S]]) ⇒ (Individual[S]) ⇒ Step[Double, List[Individual[S]]]", "member" : "cilib.ga.GA.ga", "link" : "cilib\/ga\/GA$.html#ga[S](p_c:Double,parentSelection:scalaz.NonEmptyList[cilib.ga.Individual[S]]=>cilib.RVar[List[cilib.ga.Individual[S]]],crossover:List[cilib.ga.Individual[S]]=>cilib.RVar[List[cilib.ga.Individual[S]]],mutation:List[cilib.ga.Individual[S]]=>cilib.RVar[List[cilib.ga.Individual[S]]]):scalaz.NonEmptyList[cilib.ga.Individual[S]]=>(cilib.ga.Individual[S]=>cilib.Step[Double,List[cilib.ga.Individual[S]]])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/ga\/GA$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/ga\/GA$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/ga\/GA$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/ga\/GA$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/ga\/GA$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/ga\/GA$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/ga\/GA$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/ga\/GA$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/ga\/GA$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/ga\/GA$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/ga\/GA$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/ga\/GA$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/ga\/GA$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/ga\/GA$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/ga\/GA$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/ga\/GA$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/ga\/GA$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/ga\/GA$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/ga\/GA$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scalaz.syntax" : [], "cilib.eda" : [{"name" : "cilib.eda.EDA", "shortDescription" : "", "object" : "cilib\/eda\/EDA$.html", "members_object" : [{"label" : "UDMAc", "tail" : "(xs: NonEmptyList[Position[Double]]): NonEmptyList[RVar[Double]]", "member" : "cilib.eda.EDA.UDMAc", "link" : "cilib\/eda\/EDA$.html#UDMAc[A](xs:scalaz.NonEmptyList[cilib.Position[Double]]):scalaz.NonEmptyList[cilib.RVar[Double]]", "kind" : "def"}, {"label" : "eda", "tail" : "(sample: (M, Entity[S, A]) ⇒ RVar[Entity[S, A]], selection: (NonEmptyList[Entity[S, A]]) ⇒ RVar[NonEmptyList[Entity[S, A]]], generateModel: (NonEmptyList[Entity[S, A]]) ⇒ RVar[M]): (NonEmptyList[Entity[S, A]]) ⇒ Step[A, NonEmptyList[Entity[S, A]]]", "member" : "cilib.eda.EDA.eda", "link" : "cilib\/eda\/EDA$.html#eda[M,S,A](sample:(M,cilib.Entity[S,A])=>cilib.RVar[cilib.Entity[S,A]],selection:scalaz.NonEmptyList[cilib.Entity[S,A]]=>cilib.RVar[scalaz.NonEmptyList[cilib.Entity[S,A]]],generateModel:scalaz.NonEmptyList[cilib.Entity[S,A]]=>cilib.RVar[M]):scalaz.NonEmptyList[cilib.Entity[S,A]]=>cilib.Step[A,scalaz.NonEmptyList[cilib.Entity[S,A]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/eda\/EDA$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/eda\/EDA$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/eda\/EDA$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/eda\/EDA$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/eda\/EDA$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/eda\/EDA$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/eda\/EDA$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/eda\/EDA$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/eda\/EDA$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/eda\/EDA$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/eda\/EDA$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/eda\/EDA$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/eda\/EDA$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/eda\/EDA$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/eda\/EDA$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/eda\/EDA$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/eda\/EDA$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/eda\/EDA$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/eda\/EDA$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "cilib" : [{"name" : "cilib.Adjusted", "shortDescription" : "", "members_case class" : [{"label" : "adjust", "tail" : ": Double", "member" : "cilib.Adjusted.adjust", "link" : "cilib\/Adjusted.html#adjust:Double", "kind" : "val"}, {"label" : "original", "tail" : ": Infeasible", "member" : "cilib.Adjusted.original", "link" : "cilib\/Adjusted.html#original:cilib.Infeasible", "kind" : "val"}, {"label" : "fold", "tail" : "(penalty: (Adjusted) ⇒ Z, valid: (Feasible) ⇒ Z, infeasible: (Infeasible) ⇒ Z): Z", "member" : "cilib.Fit.fold", "link" : "cilib\/Adjusted.html#fold[Z](penalty:cilib.Adjusted=>Z,valid:cilib.Feasible=>Z,infeasible:cilib.Infeasible=>Z):Z", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Adjusted.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Adjusted.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Adjusted.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Adjusted.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Adjusted.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Adjusted.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Adjusted.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Adjusted.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Adjusted.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Adjusted.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Adjusted.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Adjusted.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Adjusted.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Adjusted.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Adjusted.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Adjusted.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/Adjusted.html", "kind" : "case class"}, {"name" : "cilib.Boundary", "shortDescription" : "", "object" : "cilib\/Boundary$.html", "members_object" : [{"label" : "around", "tail" : "(N: Numeric[A]): EnforceTo[RVar, A]", "member" : "cilib.Boundary.around", "link" : "cilib\/Boundary$.html#around[A](implicitN:spire.math.Numeric[A]):cilib.Boundary.EnforceTo[cilib.RVar,A]", "kind" : "def"}, {"label" : "evolutionary", "tail" : "(N: Numeric[A]): EnforceTo[RVar, A]", "member" : "cilib.Boundary.evolutionary", "link" : "cilib\/Boundary$.html#evolutionary[A](implicitN:spire.math.Numeric[A]):cilib.Boundary.EnforceTo[cilib.RVar,A]", "kind" : "def"}, {"label" : "midpoint", "tail" : "(N: Numeric[A]): Enforce[Need, A]", "member" : "cilib.Boundary.midpoint", "link" : "cilib\/Boundary$.html#midpoint[A](implicitN:spire.math.Numeric[A]):cilib.Boundary.Enforce[scalaz.Need,A]", "kind" : "def"}, {"label" : "toroidal", "tail" : "(N: Numeric[A]): Enforce[Need, A]", "member" : "cilib.Boundary.toroidal", "link" : "cilib\/Boundary$.html#toroidal[A](implicitN:spire.math.Numeric[A]):cilib.Boundary.Enforce[scalaz.Need,A]", "kind" : "def"}, {"label" : "periodic", "tail" : "(N: Numeric[A]): Enforce[Need, A]", "member" : "cilib.Boundary.periodic", "link" : "cilib\/Boundary$.html#periodic[A](implicitN:spire.math.Numeric[A]):cilib.Boundary.Enforce[scalaz.Need,A]", "kind" : "def"}, {"label" : "wrap", "tail" : "(N: Numeric[A]): Enforce[Need, A]", "member" : "cilib.Boundary.wrap", "link" : "cilib\/Boundary$.html#wrap[A](implicitN:spire.math.Numeric[A]):cilib.Boundary.Enforce[scalaz.Need,A]", "kind" : "def"}, {"label" : "reflect", "tail" : "(N: Numeric[A]): Enforce[Need, A]", "member" : "cilib.Boundary.reflect", "link" : "cilib\/Boundary$.html#reflect[A](implicitN:spire.math.Numeric[A]):cilib.Boundary.Enforce[scalaz.Need,A]", "kind" : "def"}, {"label" : "random", "tail" : "(N: Numeric[A]): Enforce[RVar, A]", "member" : "cilib.Boundary.random", "link" : "cilib\/Boundary$.html#random[A](implicitN:spire.math.Numeric[A]):cilib.Boundary.Enforce[cilib.RVar,A]", "kind" : "def"}, {"label" : "absorb", "tail" : "(N: Numeric[A]): Enforce[Need, A]", "member" : "cilib.Boundary.absorb", "link" : "cilib\/Boundary$.html#absorb[A](implicitN:spire.math.Numeric[A]):cilib.Boundary.Enforce[scalaz.Need,A]", "kind" : "def"}, {"label" : "projection", "tail" : "(N: Numeric[A]): Enforce[Need, A]", "member" : "cilib.Boundary.projection", "link" : "cilib\/Boundary$.html#projection[A](implicitN:spire.math.Numeric[A]):cilib.Boundary.Enforce[scalaz.Need,A]", "kind" : "def"}, {"label" : "clamp", "tail" : "(N: Numeric[A]): Enforce[Need, A]", "member" : "cilib.Boundary.clamp", "link" : "cilib\/Boundary$.html#clamp[A](implicitN:spire.math.Numeric[A]):cilib.Boundary.Enforce[scalaz.Need,A]", "kind" : "def"}, {"label" : "enforceTo", "tail" : "(x: Position[A], z: Position[A], f: EnforceTo[F, A])(arg0: Numeric[A], F: Applicative[F]): F[NonEmptyList[A]]", "member" : "cilib.Boundary.enforceTo", "link" : "cilib\/Boundary$.html#enforceTo[F[_],A,B](x:cilib.Position[A],z:cilib.Position[A],f:cilib.Boundary.EnforceTo[F,A])(implicitevidence$3:spire.math.Numeric[A],implicitF:scalaz.Applicative[F]):F[scalaz.NonEmptyList[A]]", "kind" : "def"}, {"label" : "enforce", "tail" : "(x: Position[A], f: Enforce[F, A])(arg0: Applicative[F], arg1: Numeric[A]): F[NonEmptyList[A]]", "member" : "cilib.Boundary.enforce", "link" : "cilib\/Boundary$.html#enforce[F[_],A](x:cilib.Position[A],f:cilib.Boundary.Enforce[F,A])(implicitevidence$1:scalaz.Applicative[F],implicitevidence$2:spire.math.Numeric[A]):F[scalaz.NonEmptyList[A]]", "kind" : "def"}, {"label" : "EnforceTo", "tail" : "", "member" : "cilib.Boundary.EnforceTo", "link" : "cilib\/Boundary$.html#EnforceTo[F[_],A]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "Enforce", "tail" : "", "member" : "cilib.Boundary.Enforce", "link" : "cilib\/Boundary$.html#Enforce[F[_],A]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Boundary$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Boundary$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Boundary$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Boundary$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Boundary$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Boundary$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Boundary$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Boundary$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Boundary$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Boundary$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Boundary$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Boundary$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Boundary$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Boundary$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Boundary$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Boundary$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Boundary$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Boundary$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Boundary$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.Comparison", "shortDescription" : "", "object" : "cilib\/Comparison$.html", "members_class" : [{"member" : "cilib.Comparison#<init>", "error" : "unsupported entity"}, {"label" : "opt", "tail" : ": Opt", "member" : "cilib.Comparison.opt", "link" : "cilib\/Comparison.html#opt:cilib.Opt", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Comparison.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Comparison.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Comparison.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Comparison.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Comparison.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Comparison.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Comparison.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Comparison.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Comparison.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Comparison.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Comparison.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Comparison.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Comparison.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Comparison.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Comparison.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Comparison.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Comparison.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Comparison.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Comparison.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: F[A], b: F[A])(F: Fitness[F, A]): F[A]", "member" : "cilib.Comparison.apply", "link" : "cilib\/Comparison.html#apply[F[_],A](a:F[A],b:F[A])(implicitF:cilib.Fitness[F,A]):F[A]", "kind" : "abstract def"}], "members_object" : [{"label" : "fittest", "tail" : "(a: F[A], b: F[A])(F: Fitness[F, A]): Step[A, F[A]]", "member" : "cilib.Comparison.fittest", "link" : "cilib\/Comparison$.html#fittest[F[_],A](a:F[A],b:F[A])(implicitF:cilib.Fitness[F,A]):cilib.Step[A,F[A]]", "kind" : "def"}, {"label" : "fitter", "tail" : "(x: F[A], y: F[A])(F: Fitness[F, A]): (Comparison) ⇒ Boolean", "member" : "cilib.Comparison.fitter", "link" : "cilib\/Comparison$.html#fitter[F[_],A](x:F[A],y:F[A])(implicitF:cilib.Fitness[F,A]):cilib.Comparison=>Boolean", "kind" : "def"}, {"label" : "quality", "tail" : "(o: Opt): Comparison", "member" : "cilib.Comparison.quality", "link" : "cilib\/Comparison$.html#quality(o:cilib.Opt):cilib.Comparison", "kind" : "def"}, {"label" : "dominance", "tail" : "(o: Opt): Comparison", "member" : "cilib.Comparison.dominance", "link" : "cilib\/Comparison$.html#dominance(o:cilib.Opt):cilib.Comparison", "kind" : "def"}, {"label" : "compare", "tail" : "(x: F[A], y: F[A])(F: Fitness[F, A]): (Comparison) ⇒ F[A]", "member" : "cilib.Comparison.compare", "link" : "cilib\/Comparison$.html#compare[F[_],A](x:F[A],y:F[A])(implicitF:cilib.Fitness[F,A]):cilib.Comparison=>F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Comparison$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Comparison$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Comparison$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Comparison$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Comparison$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Comparison$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Comparison$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Comparison$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Comparison$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Comparison$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Comparison$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Comparison$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Comparison$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Comparison$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Comparison$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Comparison$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Comparison$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Comparison$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Comparison$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cilib\/Comparison.html", "kind" : "class"}, {"name" : "cilib.Constraint", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Constraint.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Constraint.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Constraint.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Constraint.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Constraint.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Constraint.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Constraint.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Constraint.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Constraint.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Constraint.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Constraint.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Constraint.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Constraint.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Constraint.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Constraint.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Constraint.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Constraint.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Constraint.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Constraint.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "cilib\/Constraint$.html", "members_object" : [{"label" : "satisfies", "tail" : "(constraint: Constraint[A], cs: NonEmptyList[A]): Boolean", "member" : "cilib.Constraint.satisfies", "link" : "cilib\/Constraint$.html#satisfies[A](constraint:cilib.Constraint[A],cs:scalaz.NonEmptyList[A]):Boolean", "kind" : "def"}, {"label" : "violationCount", "tail" : "(constraints: List[Constraint[A]], cs: NonEmptyList[A]): ViolationCount", "member" : "cilib.Constraint.violationCount", "link" : "cilib\/Constraint$.html#violationCount[A](constraints:List[cilib.Constraint[A]],cs:scalaz.NonEmptyList[A]):cilib.ViolationCount", "kind" : "def"}, {"label" : "violationMagnitude", "tail" : "(beta: Double, eta: Double, constraints: List[Constraint[A]], cs: NonEmptyList[A]): Double", "member" : "cilib.Constraint.violationMagnitude", "link" : "cilib\/Constraint$.html#violationMagnitude[A](beta:Double,eta:Double,constraints:List[cilib.Constraint[A]],cs:scalaz.NonEmptyList[A]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Constraint$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Constraint$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Constraint$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Constraint$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Constraint$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Constraint$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Constraint$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Constraint$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Constraint$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Constraint$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Constraint$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Constraint$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Constraint$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Constraint$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Constraint$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Constraint$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Constraint$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Constraint$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Constraint$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cilib\/Constraint.html", "kind" : "trait"}, {"name" : "cilib.ConstraintFunction", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(a: NonEmptyList[A]): Double", "member" : "cilib.ConstraintFunction.apply", "link" : "cilib\/ConstraintFunction.html#apply(a:scalaz.NonEmptyList[A]):Double", "kind" : "def"}, {"member" : "cilib.ConstraintFunction#<init>", "error" : "unsupported entity"}, {"label" : "f", "tail" : ": (NonEmptyList[A]) ⇒ Double", "member" : "cilib.ConstraintFunction.f", "link" : "cilib\/ConstraintFunction.html#f:scalaz.NonEmptyList[A]=>Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/ConstraintFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/ConstraintFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/ConstraintFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/ConstraintFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/ConstraintFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/ConstraintFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/ConstraintFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/ConstraintFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/ConstraintFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/ConstraintFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/ConstraintFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/ConstraintFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/ConstraintFunction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/ConstraintFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/ConstraintFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/ConstraintFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/ConstraintFunction.html", "kind" : "case class"}, {"name" : "cilib.Crossover", "shortDescription" : "", "object" : "cilib\/Crossover$.html", "members_object" : [{"label" : "undx", "tail" : "(sigma1: Double, sigma2: Double): Crossover[Double]", "member" : "cilib.Crossover.undx", "link" : "cilib\/Crossover$.html#undx(sigma1:Double,sigma2:Double):cilib.Crossover[Double]", "kind" : "def"}, {"label" : "pcx", "tail" : "(sigma1: Double, sigma2: Double): Crossover[Double]", "member" : "cilib.Crossover.pcx", "link" : "cilib\/Crossover$.html#pcx(sigma1:Double,sigma2:Double):cilib.Crossover[Double]", "kind" : "def"}, {"label" : "nmpc", "tail" : ": Crossover[Double]", "member" : "cilib.Crossover.nmpc", "link" : "cilib\/Crossover$.html#nmpc:cilib.Crossover[Double]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Crossover$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Crossover$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Crossover$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Crossover$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Crossover$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Crossover$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Crossover$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Crossover$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Crossover$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Crossover$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Crossover$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Crossover$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Crossover$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Crossover$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Crossover$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Crossover$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Crossover$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Crossover$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Crossover$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.Dist", "shortDescription" : "", "object" : "cilib\/Dist$.html", "members_object" : [{"label" : "levy", "tail" : "(l: Double, s: Double): RVar[Double]", "member" : "cilib.Dist.levy", "link" : "cilib\/Dist$.html#levy(l:Double,s:Double):cilib.RVar[Double]", "kind" : "def"}, {"label" : "gaussian", "tail" : "(mean: Double, dev: Double): RVar[Double]", "member" : "cilib.Dist.gaussian", "link" : "cilib\/Dist$.html#gaussian(mean:Double,dev:Double):cilib.RVar[Double]", "kind" : "def"}, {"label" : "weibull", "tail" : "(shape: Double, scale: Double): RVar[Double]", "member" : "cilib.Dist.weibull", "link" : "cilib\/Dist$.html#weibull(shape:Double,scale:Double):cilib.RVar[Double]", "kind" : "def"}, {"label" : "dirichlet", "tail" : "(alphas: List[Double]): RVar[List[Double]]", "member" : "cilib.Dist.dirichlet", "link" : "cilib\/Dist$.html#dirichlet(alphas:List[Double]):cilib.RVar[List[Double]]", "kind" : "def"}, {"label" : "lognormal", "tail" : "(mean: Double, dev: Double): RVar[Double]", "member" : "cilib.Dist.lognormal", "link" : "cilib\/Dist$.html#lognormal(mean:Double,dev:Double):cilib.RVar[Double]", "kind" : "def"}, {"label" : "laplace", "tail" : "(b0: Double, b1: Double): RVar[Double]", "member" : "cilib.Dist.laplace", "link" : "cilib\/Dist$.html#laplace(b0:Double,b1:Double):cilib.RVar[Double]", "kind" : "def"}, {"label" : "exponential", "tail" : "(l: Double): RVar[Double]", "member" : "cilib.Dist.exponential", "link" : "cilib\/Dist$.html#exponential(l:Double):cilib.RVar[Double]", "kind" : "def"}, {"label" : "gamma", "tail" : "(k: Double, theta: Double): RVar[Double]", "member" : "cilib.Dist.gamma", "link" : "cilib\/Dist$.html#gamma(k:Double,theta:Double):cilib.RVar[Double]", "kind" : "def"}, {"label" : "cauchy", "tail" : "(l: Double, s: Double): RVar[Double]", "member" : "cilib.Dist.cauchy", "link" : "cilib\/Dist$.html#cauchy(l:Double,s:Double):cilib.RVar[Double]", "kind" : "def"}, {"label" : "uniform", "tail" : "(i: Interval[Double]): RVar[Double]", "member" : "cilib.Dist.uniform", "link" : "cilib\/Dist$.html#uniform(i:spire.math.Interval[Double]):cilib.RVar[Double]", "kind" : "def"}, {"label" : "uniformInt", "tail" : "(i: Interval[Int]): RVar[Int]", "member" : "cilib.Dist.uniformInt", "link" : "cilib\/Dist$.html#uniformInt(i:spire.math.Interval[Int]):cilib.RVar[Int]", "kind" : "def"}, {"label" : "stdLognormal", "tail" : ": RVar[Double]", "member" : "cilib.Dist.stdLognormal", "link" : "cilib\/Dist$.html#stdLognormal:cilib.RVar[Double]", "kind" : "val"}, {"label" : "stdLaplace", "tail" : ": RVar[Double]", "member" : "cilib.Dist.stdLaplace", "link" : "cilib\/Dist$.html#stdLaplace:cilib.RVar[Double]", "kind" : "val"}, {"label" : "stdGamma", "tail" : ": RVar[Double]", "member" : "cilib.Dist.stdGamma", "link" : "cilib\/Dist$.html#stdGamma:cilib.RVar[Double]", "kind" : "val"}, {"label" : "stdExponential", "tail" : ": RVar[Double]", "member" : "cilib.Dist.stdExponential", "link" : "cilib\/Dist$.html#stdExponential:cilib.RVar[Double]", "kind" : "val"}, {"label" : "stdCauchy", "tail" : ": RVar[Double]", "member" : "cilib.Dist.stdCauchy", "link" : "cilib\/Dist$.html#stdCauchy:cilib.RVar[Double]", "kind" : "val"}, {"label" : "stdNormal", "tail" : ": RVar[Double]", "member" : "cilib.Dist.stdNormal", "link" : "cilib\/Dist$.html#stdNormal:cilib.RVar[Double]", "kind" : "val"}, {"label" : "stdUniform", "tail" : ": RVar[Double]", "member" : "cilib.Dist.stdUniform", "link" : "cilib\/Dist$.html#stdUniform:cilib.RVar[Double]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Dist$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Dist$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Dist$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Dist$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Dist$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Dist$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Dist$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Dist$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Dist$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Dist$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Dist$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Dist$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Dist$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Dist$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Dist$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Dist$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Dist$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Dist$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Dist$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.DoubleMonoid", "shortDescription" : "", "object" : "cilib\/package$$DoubleMonoid$.html", "members_object" : [{"label" : "MonoidLaw", "tail" : "", "member" : "scalaz.Monoid.MonoidLaw", "link" : "cilib\/package$$DoubleMonoid$.html#MonoidLawextendsMonoid.this.SemigroupLaw", "kind" : "trait"}, {"label" : "SemigroupLaw", "tail" : "", "member" : "scalaz.Semigroup.SemigroupLaw", "link" : "cilib\/package$$DoubleMonoid$.html#SemigroupLawextendsAnyRef", "kind" : "trait"}, {"label" : "SemigroupApply", "tail" : "", "member" : "scalaz.Semigroup.SemigroupApply", "link" : "cilib\/package$$DoubleMonoid$.html#SemigroupApplyextendsApply[[α<:<?>]F]", "kind" : "trait"}, {"label" : "SemigroupCompose", "tail" : "", "member" : "scalaz.Semigroup.SemigroupCompose", "link" : "cilib\/package$$DoubleMonoid$.html#SemigroupComposeextendsCompose[[α<:<?>,β<:<?>]F]", "kind" : "trait"}, {"label" : "append", "tail" : "(a: Double, b: ⇒ Double): Double", "member" : "cilib.DoubleMonoid.append", "link" : "cilib\/package$$DoubleMonoid$.html#append(a:Double,b:=>Double):Double", "kind" : "def"}, {"label" : "zero", "tail" : "(): Double", "member" : "cilib.DoubleMonoid.zero", "link" : "cilib\/package$$DoubleMonoid$.html#zero:Double", "kind" : "def"}, {"label" : "monoidSyntax", "tail" : ": MonoidSyntax[Double]", "member" : "scalaz.Monoid.monoidSyntax", "link" : "cilib\/package$$DoubleMonoid$.html#monoidSyntax:scalaz.syntax.MonoidSyntax[F]", "kind" : "val"}, {"label" : "monoidLaw", "tail" : "(): MonoidLaw", "member" : "scalaz.Monoid.monoidLaw", "link" : "cilib\/package$$DoubleMonoid$.html#monoidLaw:Monoid.this.MonoidLaw", "kind" : "def"}, {"label" : "applicative", "tail" : "(): Applicative[[α]Double]", "member" : "scalaz.Monoid.applicative", "link" : "cilib\/package$$DoubleMonoid$.html#applicative:scalaz.Applicative[[α]F]", "kind" : "final def"}, {"label" : "category", "tail" : "(): Category[[α, β]Double]", "member" : "scalaz.Monoid.category", "link" : "cilib\/package$$DoubleMonoid$.html#category:scalaz.Category[[α,β]F]", "kind" : "final def"}, {"label" : "onEmpty", "tail" : "(a: Double)(v: ⇒ B)(eq: scalaz.Equal[Double], mb: Monoid[B]): B", "member" : "scalaz.Monoid.onEmpty", "link" : "cilib\/package$$DoubleMonoid$.html#onEmpty[A<:<?>,B](a:F)(v:=>B)(impliciteq:scalaz.Equal[F],implicitmb:scalaz.Monoid[B]):B", "kind" : "final def"}, {"label" : "onNotEmpty", "tail" : "(a: Double)(v: ⇒ B)(eq: scalaz.Equal[Double], mb: Monoid[B]): B", "member" : "scalaz.Monoid.onNotEmpty", "link" : "cilib\/package$$DoubleMonoid$.html#onNotEmpty[B](a:F)(v:=>B)(impliciteq:scalaz.Equal[F],implicitmb:scalaz.Monoid[B]):B", "kind" : "final def"}, {"label" : "ifEmpty", "tail" : "(a: Double)(t: ⇒ B)(f: ⇒ B)(eq: scalaz.Equal[Double]): B", "member" : "scalaz.Monoid.ifEmpty", "link" : "cilib\/package$$DoubleMonoid$.html#ifEmpty[B](a:F)(t:=>B)(f:=>B)(impliciteq:scalaz.Equal[F]):B", "kind" : "final def"}, {"label" : "isMZero", "tail" : "(a: Double)(eq: scalaz.Equal[Double]): Boolean", "member" : "scalaz.Monoid.isMZero", "link" : "cilib\/package$$DoubleMonoid$.html#isMZero(a:F)(impliciteq:scalaz.Equal[F]):Boolean", "kind" : "def"}, {"label" : "multiply", "tail" : "(value: Double, n: Int): Double", "member" : "scalaz.Monoid.multiply", "link" : "cilib\/package$$DoubleMonoid$.html#multiply(value:F,n:Int):F", "kind" : "def"}, {"label" : "semigroupSyntax", "tail" : ": SemigroupSyntax[Double]", "member" : "scalaz.Semigroup.semigroupSyntax", "link" : "cilib\/package$$DoubleMonoid$.html#semigroupSyntax:scalaz.syntax.SemigroupSyntax[F]", "kind" : "val"}, {"label" : "semigroupLaw", "tail" : "(): SemigroupLaw", "member" : "scalaz.Semigroup.semigroupLaw", "link" : "cilib\/package$$DoubleMonoid$.html#semigroupLaw:Semigroup.this.SemigroupLaw", "kind" : "def"}, {"label" : "apply", "tail" : "(): Apply[[α]Double]", "member" : "scalaz.Semigroup.apply", "link" : "cilib\/package$$DoubleMonoid$.html#apply:scalaz.Apply[[α]F]", "kind" : "final def"}, {"label" : "compose", "tail" : "(): Compose[[α, β]Double]", "member" : "scalaz.Semigroup.compose", "link" : "cilib\/package$$DoubleMonoid$.html#compose:scalaz.Compose[[α,β]F]", "kind" : "final def"}, {"label" : "multiply1", "tail" : "(value: Double, n: Int): Double", "member" : "scalaz.Semigroup.multiply1", "link" : "cilib\/package$$DoubleMonoid$.html#multiply1(value:F,n:Int):F", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/package$$DoubleMonoid$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/package$$DoubleMonoid$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/package$$DoubleMonoid$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/package$$DoubleMonoid$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/package$$DoubleMonoid$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/package$$DoubleMonoid$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/package$$DoubleMonoid$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/package$$DoubleMonoid$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/package$$DoubleMonoid$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/package$$DoubleMonoid$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/package$$DoubleMonoid$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/package$$DoubleMonoid$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/package$$DoubleMonoid$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/package$$DoubleMonoid$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/package$$DoubleMonoid$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/package$$DoubleMonoid$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/package$$DoubleMonoid$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/package$$DoubleMonoid$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/package$$DoubleMonoid$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.Entity", "shortDescription" : "", "object" : "cilib\/Entity$.html", "members_object" : [{"label" : "entityFitness", "tail" : "(): Fitness[[β$0$]Entity[S, β$0$], A]", "member" : "cilib.Entity.entityFitness", "link" : "cilib\/Entity$.html#entityFitness[S,A]:cilib.Fitness[[β$0$]cilib.Entity[S,β$0$],A]", "kind" : "implicit def"}, {"label" : "entityEqual", "tail" : "(arg0: scalaz.Equal[A]): scalaz.Equal[Entity[S, A]]", "member" : "cilib.Entity.entityEqual", "link" : "cilib\/Entity$.html#entityEqual[S,A](implicitevidence$1:scalaz.Equal[A]):scalaz.Equal[cilib.Entity[S,A]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Entity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Entity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Entity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Entity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Entity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Entity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Entity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Entity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Entity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Entity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Entity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Entity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Entity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Entity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Entity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Entity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Entity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Entity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Entity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "cilib.Entity#<init>", "error" : "unsupported entity"}, {"label" : "pos", "tail" : ": Position[A]", "member" : "cilib.Entity.pos", "link" : "cilib\/Entity.html#pos:cilib.Position[A]", "kind" : "val"}, {"label" : "state", "tail" : ": S", "member" : "cilib.Entity.state", "link" : "cilib\/Entity.html#state:S", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Entity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Entity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Entity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Entity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Entity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Entity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Entity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Entity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Entity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Entity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Entity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Entity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Entity.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Entity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Entity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Entity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/Entity.html", "kind" : "case class"}, {"name" : "cilib.Environment", "shortDescription" : "", "members_case class" : [{"member" : "cilib.Environment#<init>", "error" : "unsupported entity"}, {"label" : "eval", "tail" : ": RVar[(NonEmptyList[A]) ⇒ Objective[A]]", "member" : "cilib.Environment.eval", "link" : "cilib\/Environment.html#eval:cilib.RVar[scalaz.NonEmptyList[A]=>cilib.Objective[A]]", "kind" : "val"}, {"label" : "cmp", "tail" : ": Comparison", "member" : "cilib.Environment.cmp", "link" : "cilib\/Environment.html#cmp:cilib.Comparison", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Environment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Environment.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Environment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Environment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Environment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Environment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Environment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Environment.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Environment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Environment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Environment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Environment.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Environment.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Environment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Environment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Environment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/Environment.html", "kind" : "case class"}, {"name" : "cilib.Equal", "shortDescription" : "", "members_case class" : [{"member" : "cilib.Equal#<init>", "error" : "unsupported entity"}, {"label" : "v", "tail" : ": Double", "member" : "cilib.Equal.v", "link" : "cilib\/Equal.html#v:Double", "kind" : "val"}, {"label" : "f", "tail" : ": ConstraintFunction[A]", "member" : "cilib.Equal.f", "link" : "cilib\/Equal.html#f:cilib.ConstraintFunction[A]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Equal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Equal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Equal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Equal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Equal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Equal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Equal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Equal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Equal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Equal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Equal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Equal.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Equal.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Equal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Equal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Equal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/Equal.html", "kind" : "case class"}, {"name" : "cilib.Eval", "shortDescription" : "", "object" : "cilib\/Eval$.html", "members_class" : [{"label" : "unconstrain", "tail" : "(): Eval[F, A]", "member" : "cilib.Eval.unconstrain", "link" : "cilib\/Eval.html#unconstrain:cilib.Eval[F,A]", "kind" : "def"}, {"label" : "constrain", "tail" : "(cs: List[Constraint[A]]): Eval[F, A]", "member" : "cilib.Eval.constrain", "link" : "cilib\/Eval.html#constrain(cs:List[cilib.Constraint[A]]):cilib.Eval[F,A]", "kind" : "def"}, {"label" : "eval", "tail" : "(): RVar[(NonEmptyList[A]) ⇒ Objective[A]]", "member" : "cilib.Eval.eval", "link" : "cilib\/Eval.html#eval:cilib.RVar[scalaz.NonEmptyList[A]=>cilib.Objective[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Eval.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Eval.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Eval.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Eval.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Eval.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Eval.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Eval.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Eval.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Eval.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Eval.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Eval.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Eval.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Eval.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Eval.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Eval.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Eval.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Eval.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Eval.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Eval.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(): (F[A]) ⇒ Double", "member" : "cilib.Eval.run", "link" : "cilib\/Eval.html#run:F[A]=>Double", "kind" : "abstract def"}, {"label" : "F", "tail" : ": Input[F]", "member" : "cilib.Eval.F", "link" : "cilib\/Eval.html#F:cilib.Input[F]", "kind" : "abstract val"}], "members_object" : [{"label" : "constrained", "tail" : "(f: (F[A]) ⇒ Double, cs: List[Constraint[A]])(F: Input[F]): Eval[F, A]", "member" : "cilib.Eval.constrained", "link" : "cilib\/Eval$.html#constrained[F[_],A](f:F[A]=>Double,cs:List[cilib.Constraint[A]])(implicitF:cilib.Input[F]):cilib.Eval[F,A]", "kind" : "def"}, {"label" : "unconstrained", "tail" : "(f: (F[A]) ⇒ Double)(F: Input[F]): Eval[F, A]", "member" : "cilib.Eval.unconstrained", "link" : "cilib\/Eval$.html#unconstrained[F[_],A](f:F[A]=>Double)(implicitF:cilib.Input[F]):cilib.Eval[F,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Eval$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Eval$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Eval$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Eval$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Eval$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Eval$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Eval$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Eval$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Eval$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Eval$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Eval$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Eval$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Eval$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Eval$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Eval$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Eval$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Eval$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Eval$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Eval$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cilib\/Eval.html", "kind" : "class"}, {"name" : "cilib.EvalInstances", "members_trait" : [{"label" : "pairInput", "tail" : ": Input[[x](x, x)]", "member" : "cilib.EvalInstances.pairInput", "link" : "cilib\/EvalInstances.html#pairInput:cilib.Input[[x](x,x)]", "kind" : "implicit val"}, {"label" : "nelInput", "tail" : ": Input[NonEmptyList]", "member" : "cilib.EvalInstances.nelInput", "link" : "cilib\/EvalInstances.html#nelInput:cilib.Input[scalaz.NonEmptyList]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/EvalInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/EvalInstances.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/EvalInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/EvalInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/EvalInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/EvalInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/EvalInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/EvalInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/EvalInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/EvalInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/EvalInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/EvalInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/EvalInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/EvalInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/EvalInstances.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/EvalInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/EvalInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/EvalInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/EvalInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "cilib\/EvalInstances.html", "kind" : "trait"}, {"name" : "cilib.Feasible", "shortDescription" : "", "members_case class" : [{"member" : "cilib.Feasible#<init>", "error" : "unsupported entity"}, {"label" : "v", "tail" : ": Double", "member" : "cilib.Feasible.v", "link" : "cilib\/Feasible.html#v:Double", "kind" : "val"}, {"label" : "fold", "tail" : "(penalty: (Adjusted) ⇒ Z, valid: (Feasible) ⇒ Z, infeasible: (Infeasible) ⇒ Z): Z", "member" : "cilib.Fit.fold", "link" : "cilib\/Feasible.html#fold[Z](penalty:cilib.Adjusted=>Z,valid:cilib.Feasible=>Z,infeasible:cilib.Infeasible=>Z):Z", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Feasible.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Feasible.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Feasible.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Feasible.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Feasible.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Feasible.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Feasible.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Feasible.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Feasible.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Feasible.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Feasible.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Feasible.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Feasible.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Feasible.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Feasible.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Feasible.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/Feasible.html", "kind" : "case class"}, {"name" : "cilib.Fit", "members_trait" : [{"label" : "fold", "tail" : "(penalty: (Adjusted) ⇒ Z, valid: (Feasible) ⇒ Z, infeasible: (Infeasible) ⇒ Z): Z", "member" : "cilib.Fit.fold", "link" : "cilib\/Fit.html#fold[Z](penalty:cilib.Adjusted=>Z,valid:cilib.Feasible=>Z,infeasible:cilib.Infeasible=>Z):Z", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Fit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Fit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Fit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Fit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Fit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Fit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Fit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Fit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Fit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Fit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Fit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Fit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Fit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Fit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Fit.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Fit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Fit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Fit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Fit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "cilib\/Fit.html", "kind" : "trait"}, {"name" : "cilib.Fitness", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Fitness.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Fitness.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Fitness.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Fitness.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Fitness.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Fitness.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Fitness.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Fitness.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Fitness.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Fitness.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Fitness.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Fitness.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Fitness.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Fitness.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Fitness.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Fitness.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Fitness.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Fitness.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Fitness.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fitness", "tail" : "(a: F[A]): Option[Objective[A]]", "member" : "cilib.Fitness.fitness", "link" : "cilib\/Fitness.html#fitness(a:F[A]):Option[cilib.Objective[A]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "cilib\/Fitness.html", "kind" : "trait"}, {"name" : "cilib.Generator", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Generator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Generator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Generator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Generator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Generator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Generator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Generator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Generator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Generator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Generator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Generator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Generator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Generator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Generator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Generator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Generator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Generator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Generator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Generator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "gen", "tail" : "(): RVar[A]", "member" : "cilib.Generator.gen", "link" : "cilib\/Generator.html#gen:cilib.RVar[A]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "cilib\/Generator$.html", "members_object" : [{"label" : "BooleanGen", "tail" : "", "member" : "cilib.Generator.BooleanGen", "link" : "cilib\/Generator$.html#BooleanGen", "kind" : "implicit object"}, {"label" : "LongGen", "tail" : "", "member" : "cilib.Generator.LongGen", "link" : "cilib\/Generator$.html#LongGen", "kind" : "implicit object"}, {"label" : "IntGen", "tail" : "", "member" : "cilib.Generator.IntGen", "link" : "cilib\/Generator$.html#IntGen", "kind" : "implicit object"}, {"label" : "DoubleGen", "tail" : "", "member" : "cilib.Generator.DoubleGen", "link" : "cilib\/Generator$.html#DoubleGen", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Generator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Generator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Generator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Generator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Generator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Generator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Generator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Generator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Generator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Generator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Generator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Generator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Generator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Generator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Generator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Generator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Generator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Generator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Generator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cilib\/Generator.html", "kind" : "trait"}, {"name" : "cilib.GreaterThan", "shortDescription" : "", "members_case class" : [{"member" : "cilib.GreaterThan#<init>", "error" : "unsupported entity"}, {"label" : "v", "tail" : ": Double", "member" : "cilib.GreaterThan.v", "link" : "cilib\/GreaterThan.html#v:Double", "kind" : "val"}, {"label" : "f", "tail" : ": ConstraintFunction[A]", "member" : "cilib.GreaterThan.f", "link" : "cilib\/GreaterThan.html#f:cilib.ConstraintFunction[A]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/GreaterThan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/GreaterThan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/GreaterThan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/GreaterThan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/GreaterThan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/GreaterThan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/GreaterThan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/GreaterThan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/GreaterThan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/GreaterThan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/GreaterThan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/GreaterThan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/GreaterThan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/GreaterThan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/GreaterThan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/GreaterThan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/GreaterThan.html", "kind" : "case class"}, {"name" : "cilib.GreaterThanEqual", "shortDescription" : "", "members_case class" : [{"member" : "cilib.GreaterThanEqual#<init>", "error" : "unsupported entity"}, {"label" : "v", "tail" : ": Double", "member" : "cilib.GreaterThanEqual.v", "link" : "cilib\/GreaterThanEqual.html#v:Double", "kind" : "val"}, {"label" : "f", "tail" : ": ConstraintFunction[A]", "member" : "cilib.GreaterThanEqual.f", "link" : "cilib\/GreaterThanEqual.html#f:cilib.ConstraintFunction[A]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/GreaterThanEqual.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/GreaterThanEqual.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/GreaterThanEqual.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/GreaterThanEqual.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/GreaterThanEqual.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/GreaterThanEqual.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/GreaterThanEqual.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/GreaterThanEqual.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/GreaterThanEqual.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/GreaterThanEqual.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/GreaterThanEqual.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/GreaterThanEqual.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/GreaterThanEqual.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/GreaterThanEqual.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/GreaterThanEqual.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/GreaterThanEqual.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/GreaterThanEqual.html", "kind" : "case class"}, {"name" : "cilib.HasCharge", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/HasCharge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/HasCharge.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/HasCharge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/HasCharge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/HasCharge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/HasCharge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/HasCharge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasCharge.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasCharge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasCharge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/HasCharge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/HasCharge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/HasCharge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/HasCharge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/HasCharge.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/HasCharge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/HasCharge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/HasCharge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/HasCharge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "_charge", "tail" : "(): Lens[A, Double]", "member" : "cilib.HasCharge._charge", "link" : "cilib\/HasCharge.html#_charge:monocle.Lens[A,Double]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "cilib\/HasCharge.html", "kind" : "trait"}, {"name" : "cilib.HasMemory", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/HasMemory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/HasMemory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/HasMemory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/HasMemory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/HasMemory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/HasMemory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/HasMemory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasMemory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasMemory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasMemory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/HasMemory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/HasMemory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/HasMemory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/HasMemory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/HasMemory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/HasMemory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/HasMemory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/HasMemory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/HasMemory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "_memory", "tail" : "(): Lens[S, Position[A]]", "member" : "cilib.HasMemory._memory", "link" : "cilib\/HasMemory.html#_memory:monocle.Lens[S,cilib.Position[A]]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "cilib\/HasMemory$.html", "members_object" : [{"label" : "memMemory", "tail" : ": HasMemory[Mem[Double], Double]", "member" : "cilib.HasMemory.memMemory", "link" : "cilib\/HasMemory$.html#memMemory:cilib.HasMemory[cilib.Mem[Double],Double]", "kind" : "implicit val"}, {"label" : "apply", "tail" : "(A: HasMemory[S, A]): HasMemory[S, A]", "member" : "cilib.HasMemory.apply", "link" : "cilib\/HasMemory$.html#apply[S,A](implicitA:cilib.HasMemory[S,A]):cilib.HasMemory[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/HasMemory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/HasMemory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/HasMemory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/HasMemory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/HasMemory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/HasMemory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/HasMemory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasMemory$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasMemory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasMemory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/HasMemory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/HasMemory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/HasMemory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/HasMemory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/HasMemory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/HasMemory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/HasMemory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/HasMemory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/HasMemory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cilib\/HasMemory.html", "kind" : "trait"}, {"name" : "cilib.HasPBestStagnation", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/HasPBestStagnation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/HasPBestStagnation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/HasPBestStagnation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/HasPBestStagnation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/HasPBestStagnation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/HasPBestStagnation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/HasPBestStagnation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasPBestStagnation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasPBestStagnation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasPBestStagnation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/HasPBestStagnation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/HasPBestStagnation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/HasPBestStagnation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/HasPBestStagnation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/HasPBestStagnation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/HasPBestStagnation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/HasPBestStagnation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/HasPBestStagnation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/HasPBestStagnation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "_pbestStagnation", "tail" : "(): Lens[A, Int]", "member" : "cilib.HasPBestStagnation._pbestStagnation", "link" : "cilib\/HasPBestStagnation.html#_pbestStagnation:monocle.Lens[A,Int]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "cilib\/HasPBestStagnation.html", "kind" : "trait"}, {"name" : "cilib.HasVelocity", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/HasVelocity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/HasVelocity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/HasVelocity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/HasVelocity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/HasVelocity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/HasVelocity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/HasVelocity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasVelocity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasVelocity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasVelocity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/HasVelocity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/HasVelocity.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/HasVelocity.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/HasVelocity.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/HasVelocity.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/HasVelocity.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/HasVelocity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/HasVelocity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/HasVelocity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "_velocity", "tail" : "(): Lens[S, Position[A]]", "member" : "cilib.HasVelocity._velocity", "link" : "cilib\/HasVelocity.html#_velocity:monocle.Lens[S,cilib.Position[A]]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "cilib\/HasVelocity$.html", "members_object" : [{"label" : "memVelocity", "tail" : ": HasVelocity[Mem[Double], Double]", "member" : "cilib.HasVelocity.memVelocity", "link" : "cilib\/HasVelocity$.html#memVelocity:cilib.HasVelocity[cilib.Mem[Double],Double]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/HasVelocity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/HasVelocity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/HasVelocity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/HasVelocity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/HasVelocity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/HasVelocity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/HasVelocity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasVelocity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasVelocity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/HasVelocity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/HasVelocity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/HasVelocity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/HasVelocity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/HasVelocity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/HasVelocity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/HasVelocity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/HasVelocity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/HasVelocity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/HasVelocity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cilib\/HasVelocity.html", "kind" : "trait"}, {"name" : "cilib.Infeasible", "shortDescription" : "", "members_case class" : [{"label" : "adjust", "tail" : "(f: (Double) ⇒ Double): Adjusted", "member" : "cilib.Infeasible.adjust", "link" : "cilib\/Infeasible.html#adjust(f:Double=>Double):cilib.Adjusted", "kind" : "def"}, {"member" : "cilib.Infeasible#<init>", "error" : "unsupported entity"}, {"label" : "violations", "tail" : ": Int", "member" : "cilib.Infeasible.violations", "link" : "cilib\/Infeasible.html#violations:Int", "kind" : "val"}, {"label" : "v", "tail" : ": Double", "member" : "cilib.Infeasible.v", "link" : "cilib\/Infeasible.html#v:Double", "kind" : "val"}, {"label" : "fold", "tail" : "(penalty: (Adjusted) ⇒ Z, valid: (Feasible) ⇒ Z, infeasible: (Infeasible) ⇒ Z): Z", "member" : "cilib.Fit.fold", "link" : "cilib\/Infeasible.html#fold[Z](penalty:cilib.Adjusted=>Z,valid:cilib.Feasible=>Z,infeasible:cilib.Infeasible=>Z):Z", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Infeasible.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Infeasible.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Infeasible.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Infeasible.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Infeasible.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Infeasible.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Infeasible.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Infeasible.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Infeasible.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Infeasible.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Infeasible.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Infeasible.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Infeasible.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Infeasible.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Infeasible.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Infeasible.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/Infeasible.html", "kind" : "case class"}, {"name" : "cilib.InInterval", "shortDescription" : "", "members_case class" : [{"member" : "cilib.InInterval#<init>", "error" : "unsupported entity"}, {"label" : "interval", "tail" : ": Interval[Double]", "member" : "cilib.InInterval.interval", "link" : "cilib\/InInterval.html#interval:spire.math.Interval[Double]", "kind" : "val"}, {"label" : "f", "tail" : ": ConstraintFunction[A]", "member" : "cilib.InInterval.f", "link" : "cilib\/InInterval.html#f:cilib.ConstraintFunction[A]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/InInterval.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/InInterval.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/InInterval.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/InInterval.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/InInterval.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/InInterval.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/InInterval.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/InInterval.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/InInterval.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/InInterval.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/InInterval.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/InInterval.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/InInterval.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/InInterval.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/InInterval.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/InInterval.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/InInterval.html", "kind" : "case class"}, {"name" : "cilib.Input", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Input.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Input.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Input.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Input.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Input.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Input.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Input.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Input.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Input.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Input.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Input.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Input.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Input.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Input.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Input.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Input.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Input.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Input.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Input.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toInput", "tail" : "(a: NonEmptyList[A]): F[A]", "member" : "cilib.Input.toInput", "link" : "cilib\/Input.html#toInput[A](a:scalaz.NonEmptyList[A]):F[A]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "cilib\/Input.html", "kind" : "trait"}, {"name" : "cilib.IntervalOps", "shortDescription" : "", "members_class" : [{"label" : "upperValue", "tail" : "(): A", "member" : "cilib.IntervalOps.upperValue", "link" : "cilib\/package$$IntervalOps.html#upperValue:A", "kind" : "def"}, {"label" : "lowerValue", "tail" : "(): A", "member" : "cilib.IntervalOps.lowerValue", "link" : "cilib\/package$$IntervalOps.html#lowerValue:A", "kind" : "def"}, {"label" : "^", "tail" : "(n: Int): NonEmptyList[Interval[A]]", "member" : "cilib.IntervalOps.^", "link" : "cilib\/package$$IntervalOps.html#^(n:Int):scalaz.NonEmptyList[spire.math.Interval[A]]", "kind" : "def"}, {"member" : "cilib.IntervalOps#<init>", "error" : "unsupported entity"}, {"label" : "interval", "tail" : ": Interval[A]", "member" : "cilib.IntervalOps.interval", "link" : "cilib\/package$$IntervalOps.html#interval:spire.math.Interval[A]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cilib\/package$$IntervalOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cilib\/package$$IntervalOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/package$$IntervalOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/package$$IntervalOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cilib\/package$$IntervalOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cilib\/package$$IntervalOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cilib\/package$$IntervalOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cilib\/package$$IntervalOps.html", "kind" : "class"}, {"name" : "cilib.Iteration", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Iteration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Iteration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Iteration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Iteration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Iteration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Iteration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Iteration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Iteration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Iteration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Iteration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Iteration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Iteration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Iteration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Iteration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Iteration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Iteration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Iteration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Iteration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Iteration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(l: NonEmptyList[A])(M: Monad[M]): ListT[M, A]", "member" : "cilib.Iteration.run", "link" : "cilib\/Iteration.html#run(l:scalaz.NonEmptyList[A])(implicitM:scalaz.Monad[M]):scalaz.ListT[M,A]", "kind" : "abstract def"}], "shortDescription" : "An Iteration is an atomic action that applies a given \"algorithm\" for eachitem within the provided List[A].", "object" : "cilib\/Iteration$.html", "members_object" : [{"label" : "asyncS", "tail" : "(f: (NonEmptyList[B]) ⇒ (B) ⇒ StepS[A, S, B]): Kleisli[[γ$3$]StepS[A, S, γ$3$], NonEmptyList[B], NonEmptyList[B]]", "member" : "cilib.Iteration.asyncS", "link" : "cilib\/Iteration$.html#asyncS[A,S,B](f:scalaz.NonEmptyList[B]=>(B=>cilib.StepS[A,S,B])):scalaz.Kleisli[[γ$3$]cilib.StepS[A,S,γ$3$],scalaz.NonEmptyList[B],scalaz.NonEmptyList[B]]", "kind" : "def"}, {"label" : "async", "tail" : "(f: (NonEmptyList[B]) ⇒ (B) ⇒ Step[A, B]): Kleisli[[β$2$]Step[A, β$2$], NonEmptyList[B], NonEmptyList[B]]", "member" : "cilib.Iteration.async", "link" : "cilib\/Iteration$.html#async[A,B](f:scalaz.NonEmptyList[B]=>(B=>cilib.Step[A,B])):scalaz.Kleisli[[β$2$]cilib.Step[A,β$2$],scalaz.NonEmptyList[B],scalaz.NonEmptyList[B]]", "kind" : "def"}, {"label" : "async_", "tail" : "(f: (NonEmptyList[A]) ⇒ (A) ⇒ M[A])(arg0: Monad[M]): Kleisli[M, NonEmptyList[A], NonEmptyList[A]]", "member" : "cilib.Iteration.async_", "link" : "cilib\/Iteration$.html#async_[M[_],A](f:scalaz.NonEmptyList[A]=>(A=>M[A]))(implicitevidence$2:scalaz.Monad[M]):scalaz.Kleisli[M,scalaz.NonEmptyList[A],scalaz.NonEmptyList[A]]", "kind" : "def"}, {"label" : "syncS", "tail" : "(f: (NonEmptyList[B]) ⇒ (B) ⇒ StepS[A, S, C]): Kleisli[[γ$1$]StepS[A, S, γ$1$], NonEmptyList[B], NonEmptyList[C]]", "member" : "cilib.Iteration.syncS", "link" : "cilib\/Iteration$.html#syncS[A,S,B,C](f:scalaz.NonEmptyList[B]=>(B=>cilib.StepS[A,S,C])):scalaz.Kleisli[[γ$1$]cilib.StepS[A,S,γ$1$],scalaz.NonEmptyList[B],scalaz.NonEmptyList[C]]", "kind" : "def"}, {"label" : "sync", "tail" : "(f: (NonEmptyList[B]) ⇒ (B) ⇒ Step[A, C]): Kleisli[[β$0$]Step[A, β$0$], NonEmptyList[B], NonEmptyList[C]]", "member" : "cilib.Iteration.sync", "link" : "cilib\/Iteration$.html#sync[A,B,C](f:scalaz.NonEmptyList[B]=>(B=>cilib.Step[A,C])):scalaz.Kleisli[[β$0$]cilib.Step[A,β$0$],scalaz.NonEmptyList[B],scalaz.NonEmptyList[C]]", "kind" : "def"}, {"label" : "sync_", "tail" : "(f: (NonEmptyList[A]) ⇒ (A) ⇒ M[B])(arg0: Applicative[M]): Kleisli[M, NonEmptyList[A], NonEmptyList[B]]", "member" : "cilib.Iteration.sync_", "link" : "cilib\/Iteration$.html#sync_[M[_],A,B](f:scalaz.NonEmptyList[A]=>(A=>M[B]))(implicitevidence$1:scalaz.Applicative[M]):scalaz.Kleisli[M,scalaz.NonEmptyList[A],scalaz.NonEmptyList[B]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Iteration$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Iteration$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Iteration$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Iteration$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Iteration$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Iteration$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Iteration$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Iteration$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Iteration$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Iteration$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Iteration$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Iteration$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Iteration$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Iteration$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Iteration$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Iteration$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Iteration$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Iteration$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Iteration$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cilib\/Iteration.html", "kind" : "trait"}, {"name" : "cilib.Lenses", "shortDescription" : "", "object" : "cilib\/Lenses$.html", "members_object" : [{"label" : "_feasible", "tail" : "(): Prism[Fit, Double]", "member" : "cilib.Lenses._feasible", "link" : "cilib\/Lenses$.html#_feasible:monocle.Prism[cilib.Fit,Double]", "kind" : "def"}, {"label" : "_singleFitness", "tail" : "(): Optional[Position[A], Fit]", "member" : "cilib.Lenses._singleFitness", "link" : "cilib\/Lenses$.html#_singleFitness[A]:monocle.Optional[cilib.Position[A],cilib.Fit]", "kind" : "def"}, {"label" : "_singleFit", "tail" : "(): Lens[Single[A], Fit]", "member" : "cilib.Lenses._singleFit", "link" : "cilib\/Lenses$.html#_singleFit[A]:monocle.Lens[cilib.Single[A],cilib.Fit]", "kind" : "def"}, {"label" : "_multiObjective", "tail" : "(): Prism[Objective[A], Multi[A]]", "member" : "cilib.Lenses._multiObjective", "link" : "cilib\/Lenses$.html#_multiObjective[A]:monocle.Prism[cilib.Objective[A],cilib.Multi[A]]", "kind" : "def"}, {"label" : "_singleObjective", "tail" : "(): Prism[Objective[A], Single[A]]", "member" : "cilib.Lenses._singleObjective", "link" : "cilib\/Lenses$.html#_singleObjective[A]:monocle.Prism[cilib.Objective[A],cilib.Single[A]]", "kind" : "def"}, {"label" : "_objectiveLens", "tail" : "(): Lens[Solution[A], Objective[A]]", "member" : "cilib.Lenses._objectiveLens", "link" : "cilib\/Lenses$.html#_objectiveLens[A]:monocle.Lens[cilib.Solution[A],cilib.Objective[A]]", "kind" : "def"}, {"label" : "_solutionPrism", "tail" : "(): Prism[Position[A], Solution[A]]", "member" : "cilib.Lenses._solutionPrism", "link" : "cilib\/Lenses$.html#_solutionPrism[A]:monocle.Prism[cilib.Position[A],cilib.Solution[A]]", "kind" : "def"}, {"label" : "_vector", "tail" : "(arg0: scalaz.Equal[A]): Lens[Position[A], NonEmptyList[A]]", "member" : "cilib.Lenses._vector", "link" : "cilib\/Lenses$.html#_vector[A](implicitevidence$1:scalaz.Equal[A]):monocle.Lens[cilib.Position[A],scalaz.NonEmptyList[A]]", "kind" : "def"}, {"label" : "_position", "tail" : "(): Lens[Entity[S, A], Position[A]]", "member" : "cilib.Lenses._position", "link" : "cilib\/Lenses$.html#_position[S,A]:monocle.Lens[cilib.Entity[S,A],cilib.Position[A]]", "kind" : "def"}, {"label" : "_state", "tail" : "(): Lens[Entity[S, A], S]", "member" : "cilib.Lenses._state", "link" : "cilib\/Lenses$.html#_state[S,A]:monocle.Lens[cilib.Entity[S,A],S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Lenses$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Lenses$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Lenses$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Lenses$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Lenses$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Lenses$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Lenses$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Lenses$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Lenses$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Lenses$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Lenses$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Lenses$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Lenses$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Lenses$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Lenses$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Lenses$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Lenses$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Lenses$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Lenses$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.LessThan", "shortDescription" : "", "members_case class" : [{"member" : "cilib.LessThan#<init>", "error" : "unsupported entity"}, {"label" : "v", "tail" : ": Double", "member" : "cilib.LessThan.v", "link" : "cilib\/LessThan.html#v:Double", "kind" : "val"}, {"label" : "f", "tail" : ": ConstraintFunction[A]", "member" : "cilib.LessThan.f", "link" : "cilib\/LessThan.html#f:cilib.ConstraintFunction[A]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/LessThan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/LessThan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/LessThan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/LessThan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/LessThan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/LessThan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/LessThan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/LessThan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/LessThan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/LessThan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/LessThan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/LessThan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/LessThan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/LessThan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/LessThan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/LessThan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/LessThan.html", "kind" : "case class"}, {"name" : "cilib.LessThanEqual", "shortDescription" : "", "members_case class" : [{"member" : "cilib.LessThanEqual#<init>", "error" : "unsupported entity"}, {"label" : "v", "tail" : ": Double", "member" : "cilib.LessThanEqual.v", "link" : "cilib\/LessThanEqual.html#v:Double", "kind" : "val"}, {"label" : "f", "tail" : ": ConstraintFunction[A]", "member" : "cilib.LessThanEqual.f", "link" : "cilib\/LessThanEqual.html#f:cilib.ConstraintFunction[A]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/LessThanEqual.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/LessThanEqual.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/LessThanEqual.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/LessThanEqual.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/LessThanEqual.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/LessThanEqual.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/LessThanEqual.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/LessThanEqual.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/LessThanEqual.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/LessThanEqual.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/LessThanEqual.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/LessThanEqual.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/LessThanEqual.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/LessThanEqual.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/LessThanEqual.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/LessThanEqual.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/LessThanEqual.html", "kind" : "case class"}, {"name" : "cilib.Max", "shortDescription" : "", "object" : "cilib\/Max$.html", "members_object" : [{"label" : "objectiveOrder", "tail" : "(): Order[Objective[A]]", "member" : "cilib.Max.objectiveOrder", "link" : "cilib\/Max$.html#objectiveOrder[A]:scalaz.Order[cilib.Objective[A]]", "kind" : "def"}, {"label" : "fitCompare", "tail" : "(x: Fit, y: Fit): Ordering", "member" : "cilib.Max.fitCompare", "link" : "cilib\/Max$.html#fitCompare(x:cilib.Fit,y:cilib.Fit):scalaz.Ordering", "kind" : "def"}, {"label" : "order", "tail" : "(x: Objective[A], y: Objective[A]): Ordering", "member" : "cilib.Opt.order", "link" : "cilib\/Max$.html#order[A](x:cilib.Objective[A],y:cilib.Objective[A]):scalaz.Ordering", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Max$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Max$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Max$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Max$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Max$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Max$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Max$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Max$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Max$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Max$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Max$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Max$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Max$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Max$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Max$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Max$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Max$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.Mem", "shortDescription" : "", "members_case class" : [{"member" : "cilib.Mem#<init>", "error" : "unsupported entity"}, {"label" : "v", "tail" : ": Position[A]", "member" : "cilib.Mem.v", "link" : "cilib\/Mem.html#v:cilib.Position[A]", "kind" : "val"}, {"label" : "b", "tail" : ": Position[A]", "member" : "cilib.Mem.b", "link" : "cilib\/Mem.html#b:cilib.Position[A]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Mem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Mem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Mem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Mem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Mem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Mem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Mem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Mem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Mem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Mem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Mem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Mem.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Mem.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Mem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Mem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Mem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/Mem.html", "kind" : "case class"}, {"name" : "cilib.MetricSpace", "members_trait" : [{"label" : "flatMap", "tail" : "(f: (B) ⇒ MetricSpace[A, C]): MetricSpace[A, C]", "member" : "cilib.MetricSpace.flatMap", "link" : "cilib\/MetricSpace.html#flatMap[C](f:B=>cilib.MetricSpace[A,C]):cilib.MetricSpace[A,C]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (B) ⇒ C): MetricSpace[A, C]", "member" : "cilib.MetricSpace.map", "link" : "cilib\/MetricSpace.html#map[C](f:B=>C):cilib.MetricSpace[A,C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/MetricSpace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/MetricSpace.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/MetricSpace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/MetricSpace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/MetricSpace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/MetricSpace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/MetricSpace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/MetricSpace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/MetricSpace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/MetricSpace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/MetricSpace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/MetricSpace.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/MetricSpace.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/MetricSpace.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/MetricSpace.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/MetricSpace.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/MetricSpace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/MetricSpace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/MetricSpace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dist", "tail" : "(x: A, y: A): B", "member" : "cilib.MetricSpace.dist", "link" : "cilib\/MetricSpace.html#dist(x:A,y:A):B", "kind" : "abstract def"}], "shortDescription" : "  A MetricSpace is a set together with a notion of distance between elements.", "object" : "cilib\/MetricSpace$.html", "members_object" : [{"label" : "metricSpaceMonad", "tail" : "(): Monad[[β$0$]MetricSpace[A, β$0$]]", "member" : "cilib.MetricSpace.metricSpaceMonad", "link" : "cilib\/MetricSpace$.html#metricSpaceMonad[A]:scalaz.Monad[[β$0$]cilib.MetricSpace[A,β$0$]]", "kind" : "implicit def"}, {"label" : "metricSpaceSemiGroup", "tail" : "(B: Semigroup[B]): Semigroup[MetricSpace[A, B]]", "member" : "cilib.MetricSpace.metricSpaceSemiGroup", "link" : "cilib\/MetricSpace$.html#metricSpaceSemiGroup[A,B](implicitB:scalaz.Semigroup[B]):scalaz.Semigroup[cilib.MetricSpace[A,B]]", "kind" : "implicit def"}, {"label" : "metricSpaceProfunctor", "tail" : "(): Profunctor[MetricSpace]", "member" : "cilib.MetricSpace.metricSpaceProfunctor", "link" : "cilib\/MetricSpace$.html#metricSpaceProfunctor:scalaz.Profunctor[cilib.MetricSpace]", "kind" : "implicit def"}, {"label" : "pure", "tail" : "(a: B): MetricSpace[A, B]", "member" : "cilib.MetricSpace.pure", "link" : "cilib\/MetricSpace$.html#pure[A,B](a:B):cilib.MetricSpace[A,B]", "kind" : "def"}, {"label" : "point", "tail" : "(a: B): MetricSpace[A, B]", "member" : "cilib.MetricSpace.point", "link" : "cilib\/MetricSpace$.html#point[A,B](a:B):cilib.MetricSpace[A,B]", "kind" : "def"}, {"label" : "hamming", "tail" : "(arg0: Foldable[F]): MetricSpace[F[A], Int]", "member" : "cilib.MetricSpace.hamming", "link" : "cilib\/MetricSpace$.html#hamming[F[_],A](implicitevidence$19:scalaz.Foldable[F]):cilib.MetricSpace[F[A],Int]", "kind" : "def"}, {"label" : "chebyshev", "tail" : "(arg0: Foldable[F], arg1: Order[A], arg2: Signed[A], ev: Ring[A]): MetricSpace[F[A], A]", "member" : "cilib.MetricSpace.chebyshev", "link" : "cilib\/MetricSpace$.html#chebyshev[F[_],A](implicitevidence$16:scalaz.Foldable[F],implicitevidence$17:spire.algebra.Order[A],implicitevidence$18:spire.algebra.Signed[A],implicitev:spire.algebra.Ring[A]):cilib.MetricSpace[F[A],A]", "kind" : "def"}, {"label" : "euclidean", "tail" : "(arg0: Foldable[F], arg1: Signed[A], arg2: Field[A], arg3: Fractional[A], arg4: Fractional[B], arg5: Field[B]): MetricSpace[F[A], B]", "member" : "cilib.MetricSpace.euclidean", "link" : "cilib\/MetricSpace$.html#euclidean[F[_],A,B](implicitevidence$10:scalaz.Foldable[F],implicitevidence$11:spire.algebra.Signed[A],implicitevidence$12:spire.algebra.Field[A],implicitevidence$13:spire.math.Fractional[A],implicitevidence$14:spire.math.Fractional[B],implicitevidence$15:spire.algebra.Field[B]):cilib.MetricSpace[F[A],B]", "kind" : "def"}, {"label" : "manhattan", "tail" : "(arg0: Foldable[F], arg1: Signed[A], arg2: Field[A], arg3: Fractional[A], arg4: Fractional[B], arg5: Field[B]): MetricSpace[F[A], B]", "member" : "cilib.MetricSpace.manhattan", "link" : "cilib\/MetricSpace$.html#manhattan[F[_],A,B](implicitevidence$4:scalaz.Foldable[F],implicitevidence$5:spire.algebra.Signed[A],implicitevidence$6:spire.algebra.Field[A],implicitevidence$7:spire.math.Fractional[A],implicitevidence$8:spire.math.Fractional[B],implicitevidence$9:spire.algebra.Field[B]):cilib.MetricSpace[F[A],B]", "kind" : "def"}, {"label" : "minkowski", "tail" : "(alpha: Int)(arg0: Foldable[F], arg1: Signed[A], arg2: Field[A], A: Fractional[A], ev: Field[B]): MetricSpace[F[A], B]", "member" : "cilib.MetricSpace.minkowski", "link" : "cilib\/MetricSpace$.html#minkowski[F[_],A,B](alpha:Int)(implicitevidence$1:scalaz.Foldable[F],implicitevidence$2:spire.algebra.Signed[A],implicitevidence$3:spire.algebra.Field[A],implicitA:spire.math.Fractional[A],implicitev:spire.algebra.Field[B]):cilib.MetricSpace[F[A],B]", "kind" : "def"}, {"label" : "discrete", "tail" : "(A: scalaz.Equal[A], B: Integral[B]): MetricSpace[A, B]", "member" : "cilib.MetricSpace.discrete", "link" : "cilib\/MetricSpace$.html#discrete[A,B](implicitA:scalaz.Equal[A],implicitB:spire.math.Integral[B]):cilib.MetricSpace[A,B]", "kind" : "def"}, {"label" : "levenshtein", "tail" : "(B: Integral[B]): MetricSpace[String, B]", "member" : "cilib.MetricSpace.levenshtein", "link" : "cilib\/MetricSpace$.html#levenshtein[B](implicitB:spire.math.Integral[B]):cilib.MetricSpace[String,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/MetricSpace$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/MetricSpace$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/MetricSpace$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/MetricSpace$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/MetricSpace$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/MetricSpace$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/MetricSpace$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/MetricSpace$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/MetricSpace$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/MetricSpace$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/MetricSpace$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/MetricSpace$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/MetricSpace$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/MetricSpace$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/MetricSpace$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/MetricSpace$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/MetricSpace$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/MetricSpace$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/MetricSpace$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cilib\/MetricSpace.html", "kind" : "trait"}, {"name" : "cilib.Min", "shortDescription" : "", "object" : "cilib\/Min$.html", "members_object" : [{"label" : "objectiveOrder", "tail" : "(): Order[Objective[A]]", "member" : "cilib.Min.objectiveOrder", "link" : "cilib\/Min$.html#objectiveOrder[A]:scalaz.Order[cilib.Objective[A]]", "kind" : "def"}, {"label" : "order", "tail" : "(x: Objective[A], y: Objective[A]): Ordering", "member" : "cilib.Opt.order", "link" : "cilib\/Min$.html#order[A](x:cilib.Objective[A],y:cilib.Objective[A]):scalaz.Ordering", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Min$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Min$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Min$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Min$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Min$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Min$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Min$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Min$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Min$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Min$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Min$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Min$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Min$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Min$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Min$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Min$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Min$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.Multi", "shortDescription" : "", "members_case class" : [{"member" : "cilib.Multi#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": List[Single[A]]", "member" : "cilib.Multi.x", "link" : "cilib\/Multi.html#x:List[cilib.Single[A]]", "kind" : "val"}, {"label" : "violationCount", "tail" : "(): Int", "member" : "cilib.Objective.violationCount", "link" : "cilib\/Multi.html#violationCount:Int", "kind" : "def"}, {"label" : "violations", "tail" : "(): List[Constraint[A]]", "member" : "cilib.Objective.violations", "link" : "cilib\/Multi.html#violations:List[cilib.Constraint[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Multi.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Multi.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Multi.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Multi.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Multi.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Multi.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Multi.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Multi.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Multi.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Multi.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Multi.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Multi.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Multi.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Multi.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Multi.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Multi.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/Multi.html", "kind" : "case class"}, {"name" : "cilib.MultiEval", "shortDescription" : "", "object" : "cilib\/MultiEval$.html", "members_object" : [{"label" : "apply", "tail" : "(a: Eval[F, A], b: Eval[F, A], rest: Eval[F, A]*): MultiEval[F, A]", "member" : "cilib.MultiEval.apply", "link" : "cilib\/MultiEval$.html#apply[F[_],A](a:cilib.Eval[F,A],b:cilib.Eval[F,A],rest:cilib.Eval[F,A]*):cilib.MultiEval[F,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/MultiEval$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/MultiEval$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/MultiEval$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/MultiEval$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/MultiEval$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/MultiEval$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/MultiEval$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/MultiEval$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/MultiEval$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/MultiEval$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/MultiEval$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/MultiEval$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/MultiEval$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/MultiEval$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/MultiEval$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/MultiEval$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/MultiEval$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/MultiEval$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/MultiEval$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "cilib.MultiEval#<init>", "error" : "unsupported entity"}, {"label" : "objectives", "tail" : ": List[Eval[F, A]]", "member" : "cilib.MultiEval.objectives", "link" : "cilib\/MultiEval.html#objectives:List[cilib.Eval[F,A]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/MultiEval.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/MultiEval.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/MultiEval.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/MultiEval.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/MultiEval.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/MultiEval.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/MultiEval.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/MultiEval.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/MultiEval.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/MultiEval.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/MultiEval.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/MultiEval.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/MultiEval.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/MultiEval.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/MultiEval.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/MultiEval.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/MultiEval.html", "kind" : "case class"}, {"name" : "cilib.Objective", "shortDescription" : "An Objective represents the result of an evaluation.", "members_class" : [{"label" : "violationCount", "tail" : "(): Int", "member" : "cilib.Objective.violationCount", "link" : "cilib\/Objective.html#violationCount:Int", "kind" : "def"}, {"label" : "violations", "tail" : "(): List[Constraint[A]]", "member" : "cilib.Objective.violations", "link" : "cilib\/Objective.html#violations:List[cilib.Constraint[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Objective.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Objective.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Objective.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Objective.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Objective.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Objective.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Objective.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Objective.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Objective.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Objective.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Objective.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Objective.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Objective.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Objective.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Objective.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Objective.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Objective.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Objective.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Objective.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cilib\/Objective.html", "kind" : "class"}, {"name" : "cilib.Opt", "members_trait" : [{"label" : "order", "tail" : "(x: Objective[A], y: Objective[A]): Ordering", "member" : "cilib.Opt.order", "link" : "cilib\/Opt.html#order[A](x:cilib.Objective[A],y:cilib.Objective[A]):scalaz.Ordering", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Opt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Opt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Opt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Opt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Opt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Opt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Opt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Opt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Opt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Opt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Opt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Opt.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Opt.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Opt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Opt.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Opt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Opt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Opt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Opt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "objectiveOrder", "tail" : "(): Order[Objective[A]]", "member" : "cilib.Opt.objectiveOrder", "link" : "cilib\/Opt.html#objectiveOrder[A]:scalaz.Order[cilib.Objective[A]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "cilib\/Opt.html", "kind" : "trait"}, {"name" : "cilib.Point", "shortDescription" : "", "members_case class" : [{"label" : "b", "tail" : ": NonEmptyList[Interval[Double]]", "member" : "cilib.Point.b", "link" : "cilib\/Point.html#b:scalaz.NonEmptyList[spire.math.Interval[Double]]", "kind" : "val"}, {"label" : "x", "tail" : ": NonEmptyList[A]", "member" : "cilib.Point.x", "link" : "cilib\/Point.html#x:scalaz.NonEmptyList[A]", "kind" : "val"}, {"label" : "forall", "tail" : "(f: (A) ⇒ Boolean): Boolean", "member" : "cilib.Position.forall", "link" : "cilib\/Point.html#forall(f:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "boundary", "tail" : "(): NonEmptyList[Interval[Double]]", "member" : "cilib.Position.boundary", "link" : "cilib\/Point.html#boundary:scalaz.NonEmptyList[spire.math.Interval[Double]]", "kind" : "def"}, {"label" : "objective", "tail" : "(): Option[Objective[A]]", "member" : "cilib.Position.objective", "link" : "cilib\/Point.html#objective:Option[cilib.Objective[A]]", "kind" : "def"}, {"label" : "toPoint", "tail" : "(): Position[A]", "member" : "cilib.Position.toPoint", "link" : "cilib\/Point.html#toPoint:cilib.Position[A]", "kind" : "def"}, {"label" : "pos", "tail" : "(): NonEmptyList[A]", "member" : "cilib.Position.pos", "link" : "cilib\/Point.html#pos:scalaz.NonEmptyList[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): IList[A]", "member" : "cilib.Position.drop", "link" : "cilib\/Point.html#drop(n:Int):scalaz.IList[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): IList[A]", "member" : "cilib.Position.take", "link" : "cilib\/Point.html#take(n:Int):scalaz.IList[A]", "kind" : "def"}, {"label" : "traverse", "tail" : "(f: (A) ⇒ G[B])(arg0: Applicative[G]): G[Position[B]]", "member" : "cilib.Position.traverse", "link" : "cilib\/Point.html#traverse[G[_],B](f:A=>G[B])(implicitevidence$1:scalaz.Applicative[G]):G[cilib.Position[B]]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Position[B]): Position[(A, B)]", "member" : "cilib.Position.zip", "link" : "cilib\/Point.html#zip[B](other:cilib.Position[B]):cilib.Position[(A,B)]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Position[B]): Position[B]", "member" : "cilib.Position.flatMap", "link" : "cilib\/Point.html#flatMap[B](f:A=>cilib.Position[B]):cilib.Position[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Position[B]", "member" : "cilib.Position.map", "link" : "cilib\/Point.html#map[B](f:A=>B):cilib.Position[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Point.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Point.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Point.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Point.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Point.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Point.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Point.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Point.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Point.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Point.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Point.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Point.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Point.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Point.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Point.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Point.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/Point.html", "kind" : "case class"}, {"name" : "cilib.Position", "shortDescription" : "", "object" : "cilib\/Position$.html", "members_class" : [{"label" : "forall", "tail" : "(f: (A) ⇒ Boolean): Boolean", "member" : "cilib.Position.forall", "link" : "cilib\/Position.html#forall(f:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "boundary", "tail" : "(): NonEmptyList[Interval[Double]]", "member" : "cilib.Position.boundary", "link" : "cilib\/Position.html#boundary:scalaz.NonEmptyList[spire.math.Interval[Double]]", "kind" : "def"}, {"label" : "objective", "tail" : "(): Option[Objective[A]]", "member" : "cilib.Position.objective", "link" : "cilib\/Position.html#objective:Option[cilib.Objective[A]]", "kind" : "def"}, {"label" : "toPoint", "tail" : "(): Position[A]", "member" : "cilib.Position.toPoint", "link" : "cilib\/Position.html#toPoint:cilib.Position[A]", "kind" : "def"}, {"label" : "pos", "tail" : "(): NonEmptyList[A]", "member" : "cilib.Position.pos", "link" : "cilib\/Position.html#pos:scalaz.NonEmptyList[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): IList[A]", "member" : "cilib.Position.drop", "link" : "cilib\/Position.html#drop(n:Int):scalaz.IList[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): IList[A]", "member" : "cilib.Position.take", "link" : "cilib\/Position.html#take(n:Int):scalaz.IList[A]", "kind" : "def"}, {"label" : "traverse", "tail" : "(f: (A) ⇒ G[B])(arg0: Applicative[G]): G[Position[B]]", "member" : "cilib.Position.traverse", "link" : "cilib\/Position.html#traverse[G[_],B](f:A=>G[B])(implicitevidence$1:scalaz.Applicative[G]):G[cilib.Position[B]]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Position[B]): Position[(A, B)]", "member" : "cilib.Position.zip", "link" : "cilib\/Position.html#zip[B](other:cilib.Position[B]):cilib.Position[(A,B)]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Position[B]): Position[B]", "member" : "cilib.Position.flatMap", "link" : "cilib\/Position.html#flatMap[B](f:A=>cilib.Position[B]):cilib.Position[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Position[B]", "member" : "cilib.Position.map", "link" : "cilib\/Position.html#map[B](f:A=>B):cilib.Position[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Position.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Position.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Position.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Position.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Position.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Position.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Position.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Position.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Position.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Position.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Position.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Position.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Position.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Position.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Position.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Position.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Position.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Position.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Position.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "createCollection", "tail" : "(f: (Position[Double]) ⇒ A)(domain: NonEmptyList[Interval[Double]], n: Refined[Int, Positive]): RVar[NonEmptyList[A]]", "member" : "cilib.Position.createCollection", "link" : "cilib\/Position$.html#createCollection[A](f:cilib.Position[Double]=>A)(domain:scalaz.NonEmptyList[spire.math.Interval[Double]],n:eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Positive]):cilib.RVar[scalaz.NonEmptyList[A]]", "kind" : "def"}, {"label" : "createPositions", "tail" : "(domain: NonEmptyList[Interval[Double]], n: Refined[Int, Positive]): RVar[NonEmptyList[Position[Double]]]", "member" : "cilib.Position.createPositions", "link" : "cilib\/Position$.html#createPositions(domain:scalaz.NonEmptyList[spire.math.Interval[Double]],n:eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Positive]):cilib.RVar[scalaz.NonEmptyList[cilib.Position[Double]]]", "kind" : "def"}, {"label" : "createPosition", "tail" : "(domain: NonEmptyList[Interval[Double]]): RVar[Position[Double]]", "member" : "cilib.Position.createPosition", "link" : "cilib\/Position$.html#createPosition[A](domain:scalaz.NonEmptyList[spire.math.Interval[Double]]):cilib.RVar[cilib.Position[Double]]", "kind" : "def"}, {"label" : "apply", "tail" : "(xs: NonEmptyList[A], b: NonEmptyList[Interval[Double]]): Position[A]", "member" : "cilib.Position.apply", "link" : "cilib\/Position$.html#apply[A](xs:scalaz.NonEmptyList[A],b:scalaz.NonEmptyList[spire.math.Interval[Double]]):cilib.Position[A]", "kind" : "def"}, {"label" : "eval", "tail" : "(e: RVar[(NonEmptyList[A]) ⇒ Objective[A]], pos: Position[A]): RVar[Position[A]]", "member" : "cilib.Position.eval", "link" : "cilib\/Position$.html#eval[F[_],A](e:cilib.RVar[scalaz.NonEmptyList[A]=>cilib.Objective[A]],pos:cilib.Position[A]):cilib.RVar[cilib.Position[A]]", "kind" : "def"}, {"label" : "positionFoldable1", "tail" : ": Foldable1[Position]", "member" : "cilib.Position.positionFoldable1", "link" : "cilib\/Position$.html#positionFoldable1:scalaz.Foldable1[cilib.Position]", "kind" : "implicit val"}, {"label" : "positionEqual", "tail" : "(arg0: scalaz.Equal[A]): scalaz.Equal[Position[A]]", "member" : "cilib.Position.positionEqual", "link" : "cilib\/Position$.html#positionEqual[A](implicitevidence$3:scalaz.Equal[A]):scalaz.Equal[cilib.Position[A]]", "kind" : "implicit def"}, {"label" : "positionFitness", "tail" : "(): Fitness[Position, A]", "member" : "cilib.Position.positionFitness", "link" : "cilib\/Position$.html#positionFitness[A]:cilib.Fitness[cilib.Position,A]", "kind" : "implicit def"}, {"label" : "PositionVectorOps", "tail" : "", "member" : "cilib.Position.PositionVectorOps", "link" : "cilib\/Position$.html#PositionVectorOps[A]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "positionPointwise", "tail" : "(A: Numeric[A]): Pointwise[Position, A]", "member" : "cilib.Position.positionPointwise", "link" : "cilib\/Position$.html#positionPointwise[A](implicitA:spire.math.Numeric[A]):cilib.algebra.Pointwise[cilib.Position,A]", "kind" : "implicit def"}, {"label" : "positionDotProd", "tail" : "(A: Numeric[A]): DotProd[Position, A]", "member" : "cilib.Position.positionDotProd", "link" : "cilib\/Position$.html#positionDotProd[A](implicitA:spire.math.Numeric[A]):cilib.algebra.DotProd[cilib.Position,A]", "kind" : "implicit def"}, {"label" : "positionInstances", "tail" : "(): Bind[Position] with Traverse1[Position] with Align[Position]", "member" : "cilib.Position.positionInstances", "link" : "cilib\/Position$.html#positionInstances:scalaz.Bind[cilib.Position]withscalaz.Traverse1[cilib.Position]withscalaz.Align[cilib.Position]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Position$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Position$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Position$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Position$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Position$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Position$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Position$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Position$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Position$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Position$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Position$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Position$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Position$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Position$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Position$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Position$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Position$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Position$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Position$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cilib\/Position.html", "kind" : "class"}, {"name" : "cilib.RNG", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/RNG.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/RNG.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/RNG.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/RNG.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/RNG.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/RNG.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/RNG.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/RNG.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/RNG.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/RNG.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/RNG.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/RNG.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/RNG.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/RNG.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/RNG.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/RNG.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/RNG.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/RNG.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/RNG.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "next", "tail" : "(bits: Int): (RNG, Int)", "member" : "cilib.RNG.next", "link" : "cilib\/RNG.html#next(bits:Int):(cilib.RNG,Int)", "kind" : "abstract def"}, {"label" : "seed", "tail" : ": Long", "member" : "cilib.RNG.seed", "link" : "cilib\/RNG.html#seed:Long", "kind" : "abstract val"}], "shortDescription" : "", "object" : "cilib\/RNG$.html", "members_object" : [{"label" : "split", "tail" : "(r: RNG): (RNG, RNG)", "member" : "cilib.RNG.split", "link" : "cilib\/RNG$.html#split(r:cilib.RNG):(cilib.RNG,cilib.RNG)", "kind" : "def"}, {"label" : "initN", "tail" : "(n: Int, seed: Long): List[RNG]", "member" : "cilib.RNG.initN", "link" : "cilib\/RNG$.html#initN(n:Int,seed:Long):List[cilib.RNG]", "kind" : "def"}, {"label" : "init", "tail" : "(seed: Long): RNG", "member" : "cilib.RNG.init", "link" : "cilib\/RNG$.html#init(seed:Long):cilib.RNG", "kind" : "def"}, {"label" : "fromTime", "tail" : "(): RNG", "member" : "cilib.RNG.fromTime", "link" : "cilib\/RNG$.html#fromTime:cilib.RNG", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/RNG$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/RNG$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/RNG$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/RNG$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/RNG$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/RNG$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/RNG$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/RNG$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/RNG$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/RNG$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/RNG$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/RNG$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/RNG$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/RNG$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/RNG$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/RNG$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/RNG$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/RNG$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/RNG$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cilib\/RNG.html", "kind" : "trait"}, {"name" : "cilib.RVar", "shortDescription" : "", "object" : "cilib\/RVar$.html", "members_class" : [{"label" : "flatMap", "tail" : "(f: (A) ⇒ RVar[B]): RVar[B]", "member" : "cilib.RVar.flatMap", "link" : "cilib\/RVar.html#flatMap[B](f:A=>cilib.RVar[B]):cilib.RVar[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): RVar[B]", "member" : "cilib.RVar.map", "link" : "cilib\/RVar.html#map[B](f:A=>B):cilib.RVar[B]", "kind" : "def"}, {"label" : "eval", "tail" : "(s: RNG): A", "member" : "cilib.RVar.eval", "link" : "cilib\/RVar.html#eval(s:cilib.RNG):A", "kind" : "def"}, {"label" : "exec", "tail" : "(s: RNG): RNG", "member" : "cilib.RVar.exec", "link" : "cilib\/RVar.html#exec(s:cilib.RNG):cilib.RNG", "kind" : "def"}, {"label" : "run", "tail" : "(initial: RNG): (RNG, A)", "member" : "cilib.RVar.run", "link" : "cilib\/RVar.html#run(initial:cilib.RNG):(cilib.RNG,A)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/RVar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/RVar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/RVar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/RVar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/RVar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/RVar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/RVar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/RVar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/RVar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/RVar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/RVar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/RVar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/RVar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/RVar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/RVar.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/RVar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/RVar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/RVar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/RVar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "trampolined", "tail" : "(s: RNG): Trampoline[(RNG, A)]", "member" : "cilib.RVar.trampolined", "link" : "cilib\/RVar.html#trampolined(s:cilib.RNG):scalaz.Free.Trampoline[(cilib.RNG,A)]", "kind" : "abstract def"}], "members_object" : [{"label" : "choices", "tail" : "(n: Int, xs: NonEmptyList[A]): OptionT[RVar, List[A]]", "member" : "cilib.RVar.choices", "link" : "cilib\/RVar$.html#choices[A](n:Int,xs:scalaz.NonEmptyList[A]):scalaz.OptionT[cilib.RVar,List[A]]", "kind" : "def"}, {"label" : "sample", "tail" : "(n: Int, xs: NonEmptyList[A]): OptionT[RVar, List[A]]", "member" : "cilib.RVar.sample", "link" : "cilib\/RVar$.html#sample[A](n:Int,xs:scalaz.NonEmptyList[A]):scalaz.OptionT[cilib.RVar,List[A]]", "kind" : "def"}, {"label" : "shuffle", "tail" : "(xs: NonEmptyList[A]): RVar[NonEmptyList[A]]", "member" : "cilib.RVar.shuffle", "link" : "cilib\/RVar$.html#shuffle[A](xs:scalaz.NonEmptyList[A]):cilib.RVar[scalaz.NonEmptyList[A]]", "kind" : "def"}, {"label" : "choose", "tail" : "(xs: NonEmptyList[A]): RVar[A]", "member" : "cilib.RVar.choose", "link" : "cilib\/RVar$.html#choose[A](xs:scalaz.NonEmptyList[A]):cilib.RVar[A]", "kind" : "def"}, {"label" : "doubles", "tail" : "(n: Int): RVar[List[Double]]", "member" : "cilib.RVar.doubles", "link" : "cilib\/RVar$.html#doubles(n:Int):cilib.RVar[List[Double]]", "kind" : "def"}, {"label" : "ints", "tail" : "(n: Int): RVar[List[Int]]", "member" : "cilib.RVar.ints", "link" : "cilib\/RVar$.html#ints(n:Int):cilib.RVar[List[Int]]", "kind" : "def"}, {"label" : "next", "tail" : "(e: Generator[A]): RVar[A]", "member" : "cilib.RVar.next", "link" : "cilib\/RVar$.html#next[A](implicite:cilib.Generator[A]):cilib.RVar[A]", "kind" : "def"}, {"label" : "pure", "tail" : "(a: ⇒ A): RVar[A]", "member" : "cilib.RVar.pure", "link" : "cilib\/RVar$.html#pure[A](a:=>A):cilib.RVar[A]", "kind" : "def"}, {"label" : "point", "tail" : "(a: ⇒ A): RVar[A]", "member" : "cilib.RVar.point", "link" : "cilib\/RVar$.html#point[A](a:=>A):cilib.RVar[A]", "kind" : "def"}, {"label" : "trampolined", "tail" : "(f: (RNG) ⇒ Trampoline[(RNG, A)]): RVar[A]", "member" : "cilib.RVar.trampolined", "link" : "cilib\/RVar$.html#trampolined[A](f:cilib.RNG=>scalaz.Free.Trampoline[(cilib.RNG,A)]):cilib.RVar[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (RNG) ⇒ (RNG, A)): RVar[A]", "member" : "cilib.RVar.apply", "link" : "cilib\/RVar$.html#apply[A](f:cilib.RNG=>(cilib.RNG,A)):cilib.RVar[A]", "kind" : "def"}, {"label" : "rvarMonad", "tail" : ": Monad[RVar]", "member" : "cilib.RVar.rvarMonad", "link" : "cilib\/RVar$.html#rvarMonad:scalaz.Monad[cilib.RVar]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/RVar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/RVar$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/RVar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/RVar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/RVar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/RVar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/RVar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/RVar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/RVar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/RVar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/RVar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/RVar$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/RVar$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/RVar$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/RVar$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/RVar$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/RVar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/RVar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/RVar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cilib\/RVar.html", "kind" : "class"}, {"name" : "cilib.Selection", "shortDescription" : "", "object" : "cilib\/Selection$.html", "members_object" : [{"label" : "tournament", "tail" : "(n: Int, l: NonEmptyList[F[A]])(F: Fitness[F, A]): (Comparison) ⇒ RVar[Option[F[A]]]", "member" : "cilib.Selection.tournament", "link" : "cilib\/Selection$.html#tournament[F[_],A](n:Int,l:scalaz.NonEmptyList[F[A]])(implicitF:cilib.Fitness[F,A]):cilib.Comparison=>cilib.RVar[Option[F[A]]]", "kind" : "def"}, {"label" : "star", "tail" : "(): (NonEmptyList[A], A) ⇒ List[A]", "member" : "cilib.Selection.star", "link" : "cilib\/Selection$.html#star[A]:(scalaz.NonEmptyList[A],A)=>List[A]", "kind" : "def"}, {"label" : "wheel", "tail" : "(): (NonEmptyList[A], A) ⇒ List[A]", "member" : "cilib.Selection.wheel", "link" : "cilib\/Selection$.html#wheel[A]:(scalaz.NonEmptyList[A],A)=>List[A]", "kind" : "def"}, {"label" : "distanceNeighbours", "tail" : "(distance: MetricSpace[F[A], A])(n: Int)(arg0: Foldable[F], arg1: Order[A]): (NonEmptyList[F[A]], F[A]) ⇒ List[F[A]]", "member" : "cilib.Selection.distanceNeighbours", "link" : "cilib\/Selection$.html#distanceNeighbours[F[_],A](distance:cilib.MetricSpace[F[A],A])(n:Int)(implicitevidence$2:scalaz.Foldable[F],implicitevidence$3:scalaz.Order[A]):(scalaz.NonEmptyList[F[A]],F[A])=>List[F[A]]", "kind" : "def"}, {"label" : "latticeNeighbours", "tail" : "(arg0: scalaz.Equal[A]): (NonEmptyList[A], A) ⇒ List[A]", "member" : "cilib.Selection.latticeNeighbours", "link" : "cilib\/Selection$.html#latticeNeighbours[A](implicitevidence$1:scalaz.Equal[A]):(scalaz.NonEmptyList[A],A)=>List[A]", "kind" : "def"}, {"label" : "indexNeighbours", "tail" : "(n: Int): (NonEmptyList[A], A) ⇒ List[A]", "member" : "cilib.Selection.indexNeighbours", "link" : "cilib\/Selection$.html#indexNeighbours[A](n:Int):(scalaz.NonEmptyList[A],A)=>List[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Selection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Selection$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Selection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Selection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Selection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Selection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Selection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Selection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Selection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Selection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Selection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Selection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Selection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Selection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Selection$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Selection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Selection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Selection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Selection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.Single", "shortDescription" : "", "members_case class" : [{"member" : "cilib.Single#<init>", "error" : "unsupported entity"}, {"label" : "v", "tail" : ": List[Constraint[A]]", "member" : "cilib.Single.v", "link" : "cilib\/Single.html#v:List[cilib.Constraint[A]]", "kind" : "val"}, {"label" : "f", "tail" : ": Fit", "member" : "cilib.Single.f", "link" : "cilib\/Single.html#f:cilib.Fit", "kind" : "val"}, {"label" : "violationCount", "tail" : "(): Int", "member" : "cilib.Objective.violationCount", "link" : "cilib\/Single.html#violationCount:Int", "kind" : "def"}, {"label" : "violations", "tail" : "(): List[Constraint[A]]", "member" : "cilib.Objective.violations", "link" : "cilib\/Single.html#violations:List[cilib.Constraint[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Single.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Single.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Single.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Single.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Single.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Single.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Single.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Single.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Single.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Single.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Single.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Single.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Single.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Single.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Single.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Single.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/Single.html", "kind" : "case class"}, {"name" : "cilib.Solution", "shortDescription" : "", "members_case class" : [{"label" : "o", "tail" : ": Objective[A]", "member" : "cilib.Solution.o", "link" : "cilib\/Solution.html#o:cilib.Objective[A]", "kind" : "val"}, {"label" : "b", "tail" : ": NonEmptyList[Interval[Double]]", "member" : "cilib.Solution.b", "link" : "cilib\/Solution.html#b:scalaz.NonEmptyList[spire.math.Interval[Double]]", "kind" : "val"}, {"label" : "x", "tail" : ": NonEmptyList[A]", "member" : "cilib.Solution.x", "link" : "cilib\/Solution.html#x:scalaz.NonEmptyList[A]", "kind" : "val"}, {"label" : "forall", "tail" : "(f: (A) ⇒ Boolean): Boolean", "member" : "cilib.Position.forall", "link" : "cilib\/Solution.html#forall(f:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "boundary", "tail" : "(): NonEmptyList[Interval[Double]]", "member" : "cilib.Position.boundary", "link" : "cilib\/Solution.html#boundary:scalaz.NonEmptyList[spire.math.Interval[Double]]", "kind" : "def"}, {"label" : "objective", "tail" : "(): Option[Objective[A]]", "member" : "cilib.Position.objective", "link" : "cilib\/Solution.html#objective:Option[cilib.Objective[A]]", "kind" : "def"}, {"label" : "toPoint", "tail" : "(): Position[A]", "member" : "cilib.Position.toPoint", "link" : "cilib\/Solution.html#toPoint:cilib.Position[A]", "kind" : "def"}, {"label" : "pos", "tail" : "(): NonEmptyList[A]", "member" : "cilib.Position.pos", "link" : "cilib\/Solution.html#pos:scalaz.NonEmptyList[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): IList[A]", "member" : "cilib.Position.drop", "link" : "cilib\/Solution.html#drop(n:Int):scalaz.IList[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): IList[A]", "member" : "cilib.Position.take", "link" : "cilib\/Solution.html#take(n:Int):scalaz.IList[A]", "kind" : "def"}, {"label" : "traverse", "tail" : "(f: (A) ⇒ G[B])(arg0: Applicative[G]): G[Position[B]]", "member" : "cilib.Position.traverse", "link" : "cilib\/Solution.html#traverse[G[_],B](f:A=>G[B])(implicitevidence$1:scalaz.Applicative[G]):G[cilib.Position[B]]", "kind" : "def"}, {"label" : "zip", "tail" : "(other: Position[B]): Position[(A, B)]", "member" : "cilib.Position.zip", "link" : "cilib\/Solution.html#zip[B](other:cilib.Position[B]):cilib.Position[(A,B)]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Position[B]): Position[B]", "member" : "cilib.Position.flatMap", "link" : "cilib\/Solution.html#flatMap[B](f:A=>cilib.Position[B]):cilib.Position[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Position[B]", "member" : "cilib.Position.map", "link" : "cilib\/Solution.html#map[B](f:A=>B):cilib.Position[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Solution.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Solution.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Solution.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Solution.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Solution.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Solution.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Solution.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Solution.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Solution.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Solution.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Solution.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Solution.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Solution.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Solution.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Solution.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Solution.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/Solution.html", "kind" : "case class"}, {"name" : "cilib.Step", "shortDescription" : "  A Step is a type that models a single step \/ operation within a CI Algorithm.", "object" : "cilib\/Step$.html", "members_class" : [{"label" : "flatMap", "tail" : "(f: (B) ⇒ Step[A, C]): Step[A, C]", "member" : "cilib.Step.flatMap", "link" : "cilib\/Step.html#flatMap[C](f:B=>cilib.Step[A,C]):cilib.Step[A,C]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (B) ⇒ C): Step[A, C]", "member" : "cilib.Step.map", "link" : "cilib\/Step.html#map[C](f:B=>C):cilib.Step[A,C]", "kind" : "def"}, {"label" : "run", "tail" : "(env: Environment[A]): RVar[\\\/[Exception, B]]", "member" : "cilib.Step.run", "link" : "cilib\/Step.html#run(env:cilib.Environment[A]):cilib.RVar[Exception\\\/B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Step.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Step.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Step.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Step.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Step.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Step.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Step.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Step.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Step.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Step.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Step.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Step.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Step.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Step.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Step.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Step.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Step.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Step.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Step.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "stepMonad", "tail" : "(): Monad[[β$0$]Step[A, β$0$]]", "member" : "cilib.Step.stepMonad", "link" : "cilib\/Step$.html#stepMonad[A]:scalaz.Monad[[β$0$]cilib.Step[A,β$0$]]", "kind" : "implicit def"}, {"label" : "evalP", "tail" : "(pos: Position[A]): Step[A, Position[A]]", "member" : "cilib.Step.evalP", "link" : "cilib\/Step$.html#evalP[A](pos:cilib.Position[A]):cilib.Step[A,cilib.Position[A]]", "kind" : "def"}, {"label" : "eval", "tail" : "(f: (Position[A]) ⇒ Position[A])(entity: Entity[S, A]): Step[A, Entity[S, A]]", "member" : "cilib.Step.eval", "link" : "cilib\/Step$.html#eval[S,A](f:cilib.Position[A]=>cilib.Position[A])(entity:cilib.Entity[S,A]):cilib.Step[A,cilib.Entity[S,A]]", "kind" : "def"}, {"label" : "withCompareR", "tail" : "(f: (Comparison) ⇒ RVar[B]): Step[A, B]", "member" : "cilib.Step.withCompareR", "link" : "cilib\/Step$.html#withCompareR[A,B](f:cilib.Comparison=>cilib.RVar[B]):cilib.Step[A,B]", "kind" : "def"}, {"label" : "withCompare", "tail" : "(a: (Comparison) ⇒ B): Step[A, B]", "member" : "cilib.Step.withCompare", "link" : "cilib\/Step$.html#withCompare[A,B](a:cilib.Comparison=>B):cilib.Step[A,B]", "kind" : "def"}, {"label" : "liftR", "tail" : "(a: RVar[B]): Step[A, B]", "member" : "cilib.Step.liftR", "link" : "cilib\/Step$.html#liftR[A,B](a:cilib.RVar[B]):cilib.Step[A,B]", "kind" : "def"}, {"label" : "pointR", "tail" : "(a: RVar[B]): Step[A, B]", "member" : "cilib.Step.pointR", "link" : "cilib\/Step$.html#pointR[A,B](a:cilib.RVar[B]):cilib.Step[A,B]", "kind" : "def"}, {"label" : "pure", "tail" : "(b: B): Step[A, B]", "member" : "cilib.Step.pure", "link" : "cilib\/Step$.html#pure[A,B](b:B):cilib.Step[A,B]", "kind" : "def"}, {"label" : "point", "tail" : "(b: B): Step[A, B]", "member" : "cilib.Step.point", "link" : "cilib\/Step$.html#point[A,B](b:B):cilib.Step[A,B]", "kind" : "def"}, {"label" : "failString", "tail" : "(reason: String): Step[A, B]", "member" : "cilib.Step.failString", "link" : "cilib\/Step$.html#failString[A,B](reason:String):cilib.Step[A,B]", "kind" : "def"}, {"label" : "fail", "tail" : "(reason: String, error: Exception): Step[A, B]", "member" : "cilib.Step.fail", "link" : "cilib\/Step$.html#fail[A,B](reason:String,error:Exception):cilib.Step[A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/Step$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/Step$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/Step$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/Step$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/Step$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/Step$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/Step$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Step$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Step$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/Step$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/Step$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/Step$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/Step$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/Step$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/Step$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/Step$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/Step$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/Step$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/Step$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cilib\/Step.html", "kind" : "class"}, {"name" : "cilib.StepS", "shortDescription" : "", "object" : "cilib\/StepS$.html", "members_object" : [{"label" : "liftS", "tail" : "(a: State[S, B]): StepS[A, S, B]", "member" : "cilib.StepS.liftS", "link" : "cilib\/StepS$.html#liftS[A,S,B](a:scalaz.State[S,B]):cilib.StepS[A,S,B]", "kind" : "def"}, {"label" : "liftK", "tail" : "(a: (Comparison) ⇒ B): StepS[A, S, B]", "member" : "cilib.StepS.liftK", "link" : "cilib\/StepS$.html#liftK[A,S,B](a:cilib.Comparison=>B):cilib.StepS[A,S,B]", "kind" : "def"}, {"label" : "pointS", "tail" : "(a: Step[A, B]): StepS[A, S, B]", "member" : "cilib.StepS.pointS", "link" : "cilib\/StepS$.html#pointS[A,S,B](a:cilib.Step[A,B]):cilib.StepS[A,S,B]", "kind" : "def"}, {"label" : "liftR", "tail" : "(a: RVar[B]): StepS[A, S, B]", "member" : "cilib.StepS.liftR", "link" : "cilib\/StepS$.html#liftR[A,S,B](a:cilib.RVar[B]):cilib.StepS[A,S,B]", "kind" : "def"}, {"label" : "pointR", "tail" : "(a: RVar[B]): StepS[A, S, B]", "member" : "cilib.StepS.pointR", "link" : "cilib\/StepS$.html#pointR[A,S,B](a:cilib.RVar[B]):cilib.StepS[A,S,B]", "kind" : "def"}, {"label" : "stepSMonadState", "tail" : "(): MonadState[[γ$7$]StepS[A, S, γ$7$], S]", "member" : "cilib.StepS.stepSMonadState", "link" : "cilib\/StepS$.html#stepSMonadState[A,S]:scalaz.MonadState[[γ$7$]cilib.StepS[A,S,γ$7$],S]", "kind" : "implicit def"}, {"label" : "stepSMonad", "tail" : "(): Monad[[γ$4$]StepS[A, S, γ$4$]]", "member" : "cilib.StepS.stepSMonad", "link" : "cilib\/StepS$.html#stepSMonad[A,S]:scalaz.Monad[[γ$4$]cilib.StepS[A,S,γ$4$]]", "kind" : "implicit def"}, {"label" : "lensIso", "tail" : "(): Iso[Lens[A, B], Lens[A, B]]", "member" : "cilib.StepS.lensIso", "link" : "cilib\/StepS$.html#lensIso[A,B]:monocle.Iso[scalaz.Lens[A,B],monocle.Lens[A,B]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/StepS$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/StepS$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/StepS$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/StepS$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/StepS$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/StepS$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/StepS$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/StepS$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/StepS$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/StepS$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/StepS$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/StepS$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/StepS$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/StepS$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/StepS$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/StepS$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/StepS$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/StepS$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/StepS$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "zoom", "tail" : "(l: Lens[S2, S]): StepS[A, S2, B]", "member" : "cilib.StepS.zoom", "link" : "cilib\/StepS.html#zoom[S2](l:monocle.Lens[S2,S]):cilib.StepS[A,S2,B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (B) ⇒ StepS[A, S, C]): StepS[A, S, C]", "member" : "cilib.StepS.flatMap", "link" : "cilib\/StepS.html#flatMap[C](f:B=>cilib.StepS[A,S,C]):cilib.StepS[A,S,C]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (B) ⇒ C): StepS[A, S, C]", "member" : "cilib.StepS.map", "link" : "cilib\/StepS.html#map[C](f:B=>C):cilib.StepS[A,S,C]", "kind" : "def"}, {"member" : "cilib.StepS#<init>", "error" : "unsupported entity"}, {"label" : "run", "tail" : ": StateT[[β$2$]Step[A, β$2$], S, B]", "member" : "cilib.StepS.run", "link" : "cilib\/StepS.html#run:scalaz.StateT[[β$2$]cilib.Step[A,β$2$],S,B]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/StepS.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/StepS.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/StepS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/StepS.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/StepS.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/StepS.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/StepS.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/StepS.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/StepS.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/StepS.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/StepS.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/StepS.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/StepS.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/StepS.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/StepS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/StepS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/StepS.html", "kind" : "case class"}, {"name" : "cilib.ViolationCount", "shortDescription" : "", "object" : "cilib\/ViolationCount$.html", "members_class" : [{"member" : "cilib.ViolationCount#<init>", "error" : "unsupported entity"}, {"label" : "count", "tail" : ": Int", "member" : "cilib.ViolationCount.count", "link" : "cilib\/ViolationCount.html#count:Int", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cilib\/ViolationCount.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cilib\/ViolationCount.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/ViolationCount.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/ViolationCount.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cilib\/ViolationCount.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cilib\/ViolationCount.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cilib\/ViolationCount.html#==(x$1:Any):Boolean", "kind" : "final def"}], "members_object" : [{"label" : "violationMonoid", "tail" : "(): Monoid[ViolationCount]", "member" : "cilib.ViolationCount.violationMonoid", "link" : "cilib\/ViolationCount$.html#violationMonoid[A]:scalaz.Monoid[cilib.ViolationCount]", "kind" : "implicit def"}, {"label" : "violationOrder", "tail" : ": Order[ViolationCount]", "member" : "cilib.ViolationCount.violationOrder", "link" : "cilib\/ViolationCount$.html#violationOrder:scalaz.Order[cilib.ViolationCount]", "kind" : "implicit val"}, {"label" : "zero", "tail" : ": ViolationCount", "member" : "cilib.ViolationCount.zero", "link" : "cilib\/ViolationCount$.html#zero:cilib.ViolationCount", "kind" : "val"}, {"label" : "apply", "tail" : "(i: Int): Maybe[ViolationCount]", "member" : "cilib.ViolationCount.apply", "link" : "cilib\/ViolationCount$.html#apply(i:Int):scalaz.Maybe[cilib.ViolationCount]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/ViolationCount$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/ViolationCount$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/ViolationCount$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/ViolationCount$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/ViolationCount$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/ViolationCount$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/ViolationCount$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/ViolationCount$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/ViolationCount$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/ViolationCount$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/ViolationCount$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/ViolationCount$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/ViolationCount$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/ViolationCount$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/ViolationCount$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/ViolationCount$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/ViolationCount$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/ViolationCount$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/ViolationCount$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cilib\/ViolationCount.html", "kind" : "class"}], "cilib.pso" : [{"name" : "cilib.pso.Defaults", "shortDescription" : "", "object" : "cilib\/pso\/Defaults$.html", "members_object" : [{"label" : "crossoverPSO", "tail" : "(guide: Guide[S, Double])(M: HasMemory[S, Double]): (NonEmptyList[Particle[S, Double]]) ⇒ (Particle[S, Double]) ⇒ Step[Double, Particle[S, Double]]", "member" : "cilib.pso.Defaults.crossoverPSO", "link" : "cilib\/pso\/Defaults$.html#crossoverPSO[S](guide:cilib.pso.Guide[S,Double])(implicitM:cilib.HasMemory[S,Double]):scalaz.NonEmptyList[cilib.pso.Particle[S,Double]]=>(cilib.pso.Particle[S,Double]=>cilib.Step[Double,cilib.pso.Particle[S,Double]])", "kind" : "def"}, {"label" : "nmpc", "tail" : "(guide: Guide[S, Double])(M: HasMemory[S, Double]): (NonEmptyList[Particle[S, Double]]) ⇒ (Particle[S, Double]) ⇒ Step[Double, Particle[S, Double]]", "member" : "cilib.pso.Defaults.nmpc", "link" : "cilib\/pso\/Defaults$.html#nmpc[S](guide:cilib.pso.Guide[S,Double])(implicitM:cilib.HasMemory[S,Double]):scalaz.NonEmptyList[cilib.pso.Particle[S,Double]]=>(cilib.pso.Particle[S,Double]=>cilib.Step[Double,cilib.pso.Particle[S,Double]])", "kind" : "def"}, {"label" : "charged", "tail" : "(w: Double, c1: Double, c2: Double, cognitive: Guide[S, Double], social: Guide[S, Double], distance: (Position[Double], Position[Double]) ⇒ Double, rp: Double, rc: Double)(arg0: HasCharge[S], M: HasMemory[S, Double], V: HasVelocity[S, Double]): (NonEmptyList[Particle[S, Double]]) ⇒ (Particle[S, Double]) ⇒ Step[Double, Particle[S, Double]]", "member" : "cilib.pso.Defaults.charged", "link" : "cilib\/pso\/Defaults$.html#charged[S](w:Double,c1:Double,c2:Double,cognitive:cilib.pso.Guide[S,Double],social:cilib.pso.Guide[S,Double],distance:(cilib.Position[Double],cilib.Position[Double])=>Double,rp:Double,rc:Double)(implicitevidence$1:cilib.HasCharge[S],implicitM:cilib.HasMemory[S,Double],implicitV:cilib.HasVelocity[S,Double]):scalaz.NonEmptyList[cilib.pso.Particle[S,Double]]=>(cilib.pso.Particle[S,Double]=>cilib.Step[Double,cilib.pso.Particle[S,Double]])", "kind" : "def"}, {"label" : "gcpso", "tail" : "(w: Double, c1: Double, c2: Double, cognitive: Guide[S, Double])(M: HasMemory[S, Double], V: HasVelocity[S, Double], S: MonadState[[γ$0$]StepS[Double, GCParams, γ$0$], GCParams]): (NonEmptyList[Particle[S, Double]]) ⇒ (Particle[S, Double]) ⇒ StepS[Double, GCParams, Particle[S, Double]]", "member" : "cilib.pso.Defaults.gcpso", "link" : "cilib\/pso\/Defaults$.html#gcpso[S](w:Double,c1:Double,c2:Double,cognitive:cilib.pso.Guide[S,Double])(implicitM:cilib.HasMemory[S,Double],implicitV:cilib.HasVelocity[S,Double],implicitS:scalaz.MonadState[[γ$0$]cilib.StepS[Double,cilib.pso.PSO.GCParams,γ$0$],cilib.pso.PSO.GCParams]):scalaz.NonEmptyList[cilib.pso.Particle[S,Double]]=>(cilib.pso.Particle[S,Double]=>cilib.StepS[Double,cilib.pso.PSO.GCParams,cilib.pso.Particle[S,Double]])", "kind" : "def"}, {"label" : "social", "tail" : "(w: Double, c1: Double, social: Guide[S, Double])(M: HasMemory[S, Double], V: HasVelocity[S, Double]): (NonEmptyList[Particle[S, Double]]) ⇒ (Particle[S, Double]) ⇒ Step[Double, Particle[S, Double]]", "member" : "cilib.pso.Defaults.social", "link" : "cilib\/pso\/Defaults$.html#social[S](w:Double,c1:Double,social:cilib.pso.Guide[S,Double])(implicitM:cilib.HasMemory[S,Double],implicitV:cilib.HasVelocity[S,Double]):scalaz.NonEmptyList[cilib.pso.Particle[S,Double]]=>(cilib.pso.Particle[S,Double]=>cilib.Step[Double,cilib.pso.Particle[S,Double]])", "kind" : "def"}, {"label" : "cognitive", "tail" : "(w: Double, c1: Double, cognitive: Guide[S, Double])(M: HasMemory[S, Double], V: HasVelocity[S, Double]): (NonEmptyList[Particle[S, Double]]) ⇒ (Particle[S, Double]) ⇒ Step[Double, Particle[S, Double]]", "member" : "cilib.pso.Defaults.cognitive", "link" : "cilib\/pso\/Defaults$.html#cognitive[S](w:Double,c1:Double,cognitive:cilib.pso.Guide[S,Double])(implicitM:cilib.HasMemory[S,Double],implicitV:cilib.HasVelocity[S,Double]):scalaz.NonEmptyList[cilib.pso.Particle[S,Double]]=>(cilib.pso.Particle[S,Double]=>cilib.Step[Double,cilib.pso.Particle[S,Double]])", "kind" : "def"}, {"label" : "gbest", "tail" : "(w: Double, c1: Double, c2: Double, cognitive: Guide[S, Double], social: Guide[S, Double])(M: HasMemory[S, Double], V: HasVelocity[S, Double]): (NonEmptyList[Particle[S, Double]]) ⇒ (Particle[S, Double]) ⇒ Step[Double, Particle[S, Double]]", "member" : "cilib.pso.Defaults.gbest", "link" : "cilib\/pso\/Defaults$.html#gbest[S](w:Double,c1:Double,c2:Double,cognitive:cilib.pso.Guide[S,Double],social:cilib.pso.Guide[S,Double])(implicitM:cilib.HasMemory[S,Double],implicitV:cilib.HasVelocity[S,Double]):scalaz.NonEmptyList[cilib.pso.Particle[S,Double]]=>(cilib.pso.Particle[S,Double]=>cilib.Step[Double,cilib.pso.Particle[S,Double]])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/pso\/Defaults$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/pso\/Defaults$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/pso\/Defaults$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/pso\/Defaults$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/pso\/Defaults$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/pso\/Defaults$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/pso\/Defaults$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/Defaults$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/Defaults$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/Defaults$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/pso\/Defaults$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/pso\/Defaults$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/pso\/Defaults$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/pso\/Defaults$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/pso\/Defaults$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/pso\/Defaults$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/pso\/Defaults$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/pso\/Defaults$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/pso\/Defaults$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.pso.Guide", "shortDescription" : "", "object" : "cilib\/pso\/Guide$.html", "members_object" : [{"label" : "undx", "tail" : "(s1: Double, s2: Double)(M: HasMemory[S, Double]): Guide[S, Double]", "member" : "cilib.pso.Guide.undx", "link" : "cilib\/pso\/Guide$.html#undx[S](s1:Double,s2:Double)(implicitM:cilib.HasMemory[S,Double]):cilib.pso.Guide[S,Double]", "kind" : "def"}, {"label" : "pcx", "tail" : "(s1: Double, s2: Double)(M: HasMemory[S, Double]): Guide[S, Double]", "member" : "cilib.pso.Guide.pcx", "link" : "cilib\/pso\/Guide$.html#pcx[S](s1:Double,s2:Double)(implicitM:cilib.HasMemory[S,Double]):cilib.pso.Guide[S,Double]", "kind" : "def"}, {"label" : "nmpc", "tail" : "(prob: Double): Guide[S, Double]", "member" : "cilib.pso.Guide.nmpc", "link" : "cilib\/pso\/Guide$.html#nmpc[S](prob:Double):cilib.pso.Guide[S,Double]", "kind" : "def"}, {"label" : "crossover", "tail" : "(parentAttractors: NonEmptyList[Position[Double]], op: Crossover[Double]): Guide[S, Double]", "member" : "cilib.pso.Guide.crossover", "link" : "cilib\/pso\/Guide$.html#crossover[S](parentAttractors:scalaz.NonEmptyList[cilib.Position[Double]],op:cilib.Crossover[Double]):cilib.pso.Guide[S,Double]", "kind" : "def"}, {"label" : "vonNeumann", "tail" : "(M: HasMemory[S, Double]): Guide[S, Double]", "member" : "cilib.pso.Guide.vonNeumann", "link" : "cilib\/pso\/Guide$.html#vonNeumann[S](implicitM:cilib.HasMemory[S,Double]):cilib.pso.Guide[S,Double]", "kind" : "def"}, {"label" : "lbest", "tail" : "(n: Int)(M: HasMemory[S, Double]): Guide[S, Double]", "member" : "cilib.pso.Guide.lbest", "link" : "cilib\/pso\/Guide$.html#lbest[S](n:Int)(implicitM:cilib.HasMemory[S,Double]):cilib.pso.Guide[S,Double]", "kind" : "def"}, {"label" : "gbest", "tail" : "(M: HasMemory[S, Double]): Guide[S, Double]", "member" : "cilib.pso.Guide.gbest", "link" : "cilib\/pso\/Guide$.html#gbest[S](implicitM:cilib.HasMemory[S,Double]):cilib.pso.Guide[S,Double]", "kind" : "def"}, {"label" : "dominance", "tail" : "(selection: IndexSelection[Particle[S, Double]]): Guide[S, Double]", "member" : "cilib.pso.Guide.dominance", "link" : "cilib\/pso\/Guide$.html#dominance[S](selection:cilib.IndexSelection[cilib.pso.Particle[S,Double]]):cilib.pso.Guide[S,Double]", "kind" : "def"}, {"label" : "nbest", "tail" : "(neighbourhood: IndexSelection[Particle[S, Double]])(M: HasMemory[S, Double]): Guide[S, Double]", "member" : "cilib.pso.Guide.nbest", "link" : "cilib\/pso\/Guide$.html#nbest[S](neighbourhood:cilib.IndexSelection[cilib.pso.Particle[S,Double]])(implicitM:cilib.HasMemory[S,Double]):cilib.pso.Guide[S,Double]", "kind" : "def"}, {"label" : "pbest", "tail" : "(M: HasMemory[S, A]): Guide[S, A]", "member" : "cilib.pso.Guide.pbest", "link" : "cilib\/pso\/Guide$.html#pbest[S,A](implicitM:cilib.HasMemory[S,A]):cilib.pso.Guide[S,A]", "kind" : "def"}, {"label" : "identity", "tail" : "(): Guide[S, A]", "member" : "cilib.pso.Guide.identity", "link" : "cilib\/pso\/Guide$.html#identity[S,F[_],A]:cilib.pso.Guide[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/pso\/Guide$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/pso\/Guide$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/pso\/Guide$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/pso\/Guide$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/pso\/Guide$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/pso\/Guide$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/pso\/Guide$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/Guide$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/Guide$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/Guide$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/pso\/Guide$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/pso\/Guide$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/pso\/Guide$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/pso\/Guide$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/pso\/Guide$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/pso\/Guide$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/pso\/Guide$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/pso\/Guide$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/pso\/Guide$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.pso.Heterogeneous", "shortDescription" : "", "object" : "cilib\/pso\/Heterogeneous$.html", "members_object" : [{"label" : "fkPSO", "tail" : "(stagThreshold: Int, tournSize: Int)(arg0: HasPBestStagnation[S]): (NonEmptyList[HEntityB[S, A, B]]) ⇒ (HEntityB[S, A, B]) ⇒ StepS[A, (Pool[Behaviour[S, A, B]], B), HEntityB[S, A, B]]", "member" : "cilib.pso.Heterogeneous.fkPSO", "link" : "cilib\/pso\/Heterogeneous$.html#fkPSO[S,A,B](stagThreshold:Int,tournSize:Int)(implicitevidence$2:cilib.HasPBestStagnation[S]):scalaz.NonEmptyList[cilib.pso.Heterogeneous.HEntityB[S,A,B]]=>(cilib.pso.Heterogeneous.HEntityB[S,A,B]=>cilib.StepS[A,(cilib.pso.Pool[cilib.pso.Heterogeneous.Behaviour[S,A,B]],B),cilib.pso.Heterogeneous.HEntityB[S,A,B]])", "kind" : "def"}, {"label" : "dHPSO", "tail" : "(stagThreshold: Int)(arg0: HasPBestStagnation[S]): (NonEmptyList[HEntityB[S, A, B]]) ⇒ (HEntityB[S, A, B]) ⇒ StepS[A, (Pool[Behaviour[S, A, B]], B), HEntityB[S, A, B]]", "member" : "cilib.pso.Heterogeneous.dHPSO", "link" : "cilib\/pso\/Heterogeneous$.html#dHPSO[S,A,B](stagThreshold:Int)(implicitevidence$1:cilib.HasPBestStagnation[S]):scalaz.NonEmptyList[cilib.pso.Heterogeneous.HEntityB[S,A,B]]=>(cilib.pso.Heterogeneous.HEntityB[S,A,B]=>cilib.StepS[A,(cilib.pso.Pool[cilib.pso.Heterogeneous.Behaviour[S,A,B]],B),cilib.pso.Heterogeneous.HEntityB[S,A,B]])", "kind" : "def"}, {"label" : "genericHPSO", "tail" : "(schedule: (HEntityB[S, A, B]) ⇒ Boolean, selector: (NonEmptyList[HEntityB[S, A, B]]) ⇒ (HEntityB[S, A, B]) ⇒ StepS[A, Pool[Behaviour[S, A, B]], HEntityB[S, A, B]], updater: (HEntityB[S, A, B]) ⇒ (HEntityB[S, A, B]) ⇒ StepS[A, Pool[Behaviour[S, A, B]], Pool[Behaviour[S, A, B]]]): (NonEmptyList[HEntityB[S, A, B]]) ⇒ (HEntityB[S, A, B]) ⇒ StepS[A, (Pool[Behaviour[S, A, B]], B), HEntityB[S, A, B]]", "member" : "cilib.pso.Heterogeneous.genericHPSO", "link" : "cilib\/pso\/Heterogeneous$.html#genericHPSO[S,A,B](schedule:cilib.pso.Heterogeneous.HEntityB[S,A,B]=>Boolean,selector:scalaz.NonEmptyList[cilib.pso.Heterogeneous.HEntityB[S,A,B]]=>(cilib.pso.Heterogeneous.HEntityB[S,A,B]=>cilib.StepS[A,cilib.pso.Pool[cilib.pso.Heterogeneous.Behaviour[S,A,B]],cilib.pso.Heterogeneous.HEntityB[S,A,B]]),updater:cilib.pso.Heterogeneous.HEntityB[S,A,B]=>(cilib.pso.Heterogeneous.HEntityB[S,A,B]=>cilib.StepS[A,cilib.pso.Pool[cilib.pso.Heterogeneous.Behaviour[S,A,B]],cilib.pso.Pool[cilib.pso.Heterogeneous.Behaviour[S,A,B]]])):scalaz.NonEmptyList[cilib.pso.Heterogeneous.HEntityB[S,A,B]]=>(cilib.pso.Heterogeneous.HEntityB[S,A,B]=>cilib.StepS[A,(cilib.pso.Pool[cilib.pso.Heterogeneous.Behaviour[S,A,B]],B),cilib.pso.Heterogeneous.HEntityB[S,A,B]])", "kind" : "def"}, {"label" : "nullPoolUpdate", "tail" : "(): (HEntityB[S, A, B]) ⇒ (HEntityB[S, A, B]) ⇒ StepS[A, Pool[Behaviour[S, A, B]], Pool[Behaviour[S, A, B]]]", "member" : "cilib.pso.Heterogeneous.nullPoolUpdate", "link" : "cilib\/pso\/Heterogeneous$.html#nullPoolUpdate[S,A,B]:cilib.pso.Heterogeneous.HEntityB[S,A,B]=>(cilib.pso.Heterogeneous.HEntityB[S,A,B]=>cilib.StepS[A,cilib.pso.Pool[cilib.pso.Heterogeneous.Behaviour[S,A,B]],cilib.pso.Pool[cilib.pso.Heterogeneous.Behaviour[S,A,B]]])", "kind" : "def"}, {"label" : "incrementOne", "tail" : "(M: MonadState[[γ$3$]StepS[A, NonEmptyList[PoolItem[(NonEmptyList[Entity[S, A]]) ⇒ (Entity[S, A]) ⇒ StepS[A, B, Entity[S, A]]]], γ$3$], Pool[Behaviour[S, A, B]]]): (HEntityB[S, A, B]) ⇒ (HEntityB[S, A, B]) ⇒ StepS[A, Pool[Behaviour[S, A, B]], Pool[Behaviour[S, A, B]]]", "member" : "cilib.pso.Heterogeneous.incrementOne", "link" : "cilib\/pso\/Heterogeneous$.html#incrementOne[S,A,B](implicitM:scalaz.MonadState[[γ$3$]cilib.StepS[A,scalaz.NonEmptyList[cilib.pso.PoolItem[scalaz.NonEmptyList[cilib.Entity[S,A]]=>(cilib.Entity[S,A]=>cilib.StepS[A,B,cilib.Entity[S,A]])]],γ$3$],cilib.pso.Pool[cilib.pso.Heterogeneous.Behaviour[S,A,B]]]):cilib.pso.Heterogeneous.HEntityB[S,A,B]=>(cilib.pso.Heterogeneous.HEntityB[S,A,B]=>cilib.StepS[A,cilib.pso.Pool[cilib.pso.Heterogeneous.Behaviour[S,A,B]],cilib.pso.Pool[cilib.pso.Heterogeneous.Behaviour[S,A,B]]])", "kind" : "def"}, {"label" : "useBehaviour", "tail" : "(): (NonEmptyList[HEntityB[S, A, B]]) ⇒ (HEntityB[S, A, B]) ⇒ StepS[A, B, HEntityB[S, A, B]]", "member" : "cilib.pso.Heterogeneous.useBehaviour", "link" : "cilib\/pso\/Heterogeneous$.html#useBehaviour[S,A,B]:scalaz.NonEmptyList[cilib.pso.Heterogeneous.HEntityB[S,A,B]]=>(cilib.pso.Heterogeneous.HEntityB[S,A,B]=>cilib.StepS[A,B,cilib.pso.Heterogeneous.HEntityB[S,A,B]])", "kind" : "def"}, {"label" : "poolSelectTournament", "tail" : "(k: Int): (NonEmptyList[User[A, B]]) ⇒ (User[A, B]) ⇒ StepS[C, Pool[B], User[A, B]]", "member" : "cilib.pso.Heterogeneous.poolSelectTournament", "link" : "cilib\/pso\/Heterogeneous$.html#poolSelectTournament[A,B,C](k:Int):scalaz.NonEmptyList[cilib.pso.User[A,B]]=>(cilib.pso.User[A,B]=>cilib.StepS[C,cilib.pso.Pool[B],cilib.pso.User[A,B]])", "kind" : "def"}, {"label" : "poolSelectRandom", "tail" : "(): (NonEmptyList[User[A, B]]) ⇒ (User[A, B]) ⇒ StepS[C, Pool[B], User[A, B]]", "member" : "cilib.pso.Heterogeneous.poolSelectRandom", "link" : "cilib\/pso\/Heterogeneous$.html#poolSelectRandom[A,B,C]:scalaz.NonEmptyList[cilib.pso.User[A,B]]=>(cilib.pso.User[A,B]=>cilib.StepS[C,cilib.pso.Pool[B],cilib.pso.User[A,B]])", "kind" : "def"}, {"label" : "resetStagnation", "tail" : "(S: HasPBestStagnation[S]): (HEntity[S, A, B]) ⇒ HEntity[S, A, B]", "member" : "cilib.pso.Heterogeneous.resetStagnation", "link" : "cilib\/pso\/Heterogeneous$.html#resetStagnation[S,A,B](implicitS:cilib.HasPBestStagnation[S]):cilib.pso.Heterogeneous.HEntity[S,A,B]=>cilib.pso.Heterogeneous.HEntity[S,A,B]", "kind" : "def"}, {"label" : "pbestStagnated", "tail" : "(threshold: Int)(S: HasPBestStagnation[S]): (HEntity[S, A, B]) ⇒ Boolean", "member" : "cilib.pso.Heterogeneous.pbestStagnated", "link" : "cilib\/pso\/Heterogeneous$.html#pbestStagnated[S,A,B](threshold:Int)(implicitS:cilib.HasPBestStagnation[S]):cilib.pso.Heterogeneous.HEntity[S,A,B]=>Boolean", "kind" : "def"}, {"label" : "assignRandom", "tail" : "(M: MonadState[[γ$0$]StepS[C, NonEmptyList[PoolItem[B]], γ$0$], Pool[B]]): (NonEmptyList[A]) ⇒ StepS[C, Pool[B], NonEmptyList[User[A, B]]]", "member" : "cilib.pso.Heterogeneous.assignRandom", "link" : "cilib\/pso\/Heterogeneous$.html#assignRandom[A,B,C](implicitM:scalaz.MonadState[[γ$0$]cilib.StepS[C,scalaz.NonEmptyList[cilib.pso.PoolItem[B]],γ$0$],cilib.pso.Pool[B]]):scalaz.NonEmptyList[A]=>cilib.StepS[C,cilib.pso.Pool[B],scalaz.NonEmptyList[cilib.pso.User[A,B]]]", "kind" : "def"}, {"label" : "updateStagnation", "tail" : "(p: Entity[S, A])(M: HasMemory[S, A], S: HasPBestStagnation[S]): Step[A, Entity[S, A]]", "member" : "cilib.pso.Heterogeneous.updateStagnation", "link" : "cilib\/pso\/Heterogeneous$.html#updateStagnation[S,A](p:cilib.Entity[S,A])(implicitM:cilib.HasMemory[S,A],implicitS:cilib.HasPBestStagnation[S]):cilib.Step[A,cilib.Entity[S,A]]", "kind" : "def"}, {"label" : "HEntityB", "tail" : "", "member" : "cilib.pso.Heterogeneous.HEntityB", "link" : "cilib\/pso\/Heterogeneous$.html#HEntityB[S,A,B]=cilib.pso.Heterogeneous.HEntity[S,A,cilib.pso.Heterogeneous.Behaviour[S,A,B]]", "kind" : "type"}, {"label" : "HEntity", "tail" : "", "member" : "cilib.pso.Heterogeneous.HEntity", "link" : "cilib\/pso\/Heterogeneous$.html#HEntity[S,A,B]=cilib.pso.User[cilib.Entity[S,A],B]", "kind" : "type"}, {"label" : "SI", "tail" : "", "member" : "cilib.pso.Heterogeneous.SI", "link" : "cilib\/pso\/Heterogeneous$.html#SI[S,A,B]=cilib.StepS[A,S,B]", "kind" : "type"}, {"label" : "Behaviour", "tail" : "", "member" : "cilib.pso.Heterogeneous.Behaviour", "link" : "cilib\/pso\/Heterogeneous$.html#Behaviour[S,A,B]=scalaz.NonEmptyList[cilib.Entity[S,A]]=>(cilib.Entity[S,A]=>cilib.StepS[A,B,cilib.Entity[S,A]])", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/pso\/Heterogeneous$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/pso\/Heterogeneous$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/pso\/Heterogeneous$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/pso\/Heterogeneous$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/pso\/Heterogeneous$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/pso\/Heterogeneous$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/pso\/Heterogeneous$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/Heterogeneous$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/Heterogeneous$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/Heterogeneous$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/pso\/Heterogeneous$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/pso\/Heterogeneous$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/pso\/Heterogeneous$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/pso\/Heterogeneous$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/pso\/Heterogeneous$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/pso\/Heterogeneous$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/pso\/Heterogeneous$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/pso\/Heterogeneous$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/pso\/Heterogeneous$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.pso.Pool", "shortDescription" : "", "object" : "cilib\/pso\/Pool$.html", "members_object" : [{"label" : "updateUserBehaviours", "tail" : "(oldP: Pool[B], newP: Pool[B])(xs: NonEmptyList[User[A, B]]): NonEmptyList[User[A, B]]", "member" : "cilib.pso.Pool.updateUserBehaviours", "link" : "cilib\/pso\/Pool$.html#updateUserBehaviours[A,B](oldP:cilib.pso.Pool[B],newP:cilib.pso.Pool[B])(xs:scalaz.NonEmptyList[cilib.pso.User[A,B]]):scalaz.NonEmptyList[cilib.pso.User[A,B]]", "kind" : "def"}, {"label" : "mkFromOldPool", "tail" : "(oldP: Pool[A], xs: NonEmptyList[A]): NonEmptyList[PoolItem[A]]", "member" : "cilib.pso.Pool.mkFromOldPool", "link" : "cilib\/pso\/Pool$.html#mkFromOldPool[A](oldP:cilib.pso.Pool[A],xs:scalaz.NonEmptyList[A]):scalaz.NonEmptyList[cilib.pso.PoolItem[A]]", "kind" : "def"}, {"label" : "mkPoolListScore", "tail" : "(pool: Pool[A]): NonEmptyList[PoolItem[A]]", "member" : "cilib.pso.Pool.mkPoolListScore", "link" : "cilib\/pso\/Pool$.html#mkPoolListScore[A](pool:cilib.pso.Pool[A]):scalaz.NonEmptyList[cilib.pso.PoolItem[A]]", "kind" : "def"}, {"label" : "mkZeroPool", "tail" : "(xs: NonEmptyList[A]): NonEmptyList[PoolItem[A]]", "member" : "cilib.pso.Pool.mkZeroPool", "link" : "cilib\/pso\/Pool$.html#mkZeroPool[A](xs:scalaz.NonEmptyList[A]):scalaz.NonEmptyList[cilib.pso.PoolItem[A]]", "kind" : "def"}, {"label" : "mkEvenPool", "tail" : "(xs: NonEmptyList[A]): NonEmptyList[PoolItem[A]]", "member" : "cilib.pso.Pool.mkEvenPool", "link" : "cilib\/pso\/Pool$.html#mkEvenPool[A](xs:scalaz.NonEmptyList[A]):scalaz.NonEmptyList[cilib.pso.PoolItem[A]]", "kind" : "def"}, {"label" : "mkPool", "tail" : "(w: Double, xs: NonEmptyList[A]): NonEmptyList[PoolItem[A]]", "member" : "cilib.pso.Pool.mkPool", "link" : "cilib\/pso\/Pool$.html#mkPool[A](w:Double,xs:scalaz.NonEmptyList[A]):scalaz.NonEmptyList[cilib.pso.PoolItem[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/pso\/Pool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/pso\/Pool$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/pso\/Pool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/pso\/Pool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/pso\/Pool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/pso\/Pool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/pso\/Pool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/Pool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/Pool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/Pool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/pso\/Pool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/pso\/Pool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/pso\/Pool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/pso\/Pool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/pso\/Pool$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/pso\/Pool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/pso\/Pool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/pso\/Pool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/pso\/Pool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.pso.PoolItem", "shortDescription" : "", "object" : "cilib\/pso\/PoolItem$.html", "members_class" : [{"label" : "change", "tail" : "(a: A): PoolItem[A]", "member" : "cilib.pso.PoolItem.change", "link" : "cilib\/pso\/PoolItem.html#change(a:A):cilib.pso.PoolItem[A]", "kind" : "def"}, {"label" : "lastK", "tail" : "(k: Int): PoolItem[A]", "member" : "cilib.pso.PoolItem.lastK", "link" : "cilib\/pso\/PoolItem.html#lastK(k:Int):cilib.pso.PoolItem[A]", "kind" : "def"}, {"label" : "split", "tail" : "(): PoolItem[A]", "member" : "cilib.pso.PoolItem.split", "link" : "cilib\/pso\/PoolItem.html#split:cilib.pso.PoolItem[A]", "kind" : "def"}, {"label" : "reward", "tail" : "(a: Double): PoolItem[A]", "member" : "cilib.pso.PoolItem.reward", "link" : "cilib\/pso\/PoolItem.html#reward(a:Double):cilib.pso.PoolItem[A]", "kind" : "def"}, {"label" : "score", "tail" : "(): Double", "member" : "cilib.pso.PoolItem.score", "link" : "cilib\/pso\/PoolItem.html#score:Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/pso\/PoolItem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/pso\/PoolItem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/pso\/PoolItem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/pso\/PoolItem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/pso\/PoolItem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/pso\/PoolItem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/pso\/PoolItem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/PoolItem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/PoolItem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/PoolItem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/pso\/PoolItem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/pso\/PoolItem.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/pso\/PoolItem.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/pso\/PoolItem.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/pso\/PoolItem.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/pso\/PoolItem.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/pso\/PoolItem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/pso\/PoolItem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/pso\/PoolItem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "item", "tail" : ": A", "member" : "cilib.pso.PoolItem.item", "link" : "cilib\/pso\/PoolItem.html#item:A", "kind" : "abstract val"}], "members_object" : [{"label" : "apply", "tail" : "(item: A, score: Double): PoolItem[A]", "member" : "cilib.pso.PoolItem.apply", "link" : "cilib\/pso\/PoolItem$.html#apply[A](item:A,score:Double):cilib.pso.PoolItem[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/pso\/PoolItem$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/pso\/PoolItem$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/pso\/PoolItem$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/pso\/PoolItem$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/pso\/PoolItem$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/pso\/PoolItem$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/pso\/PoolItem$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/PoolItem$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/PoolItem$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/PoolItem$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/pso\/PoolItem$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/pso\/PoolItem$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/pso\/PoolItem$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/pso\/PoolItem$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/pso\/PoolItem$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/pso\/PoolItem$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/pso\/PoolItem$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/pso\/PoolItem$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/pso\/PoolItem$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cilib\/pso\/PoolItem.html", "kind" : "class"}, {"name" : "cilib.pso.PSO", "shortDescription" : "", "object" : "cilib\/pso\/PSO$.html", "members_object" : [{"label" : "createParticle", "tail" : "(f: (Position[Double]) ⇒ Particle[S, Double])(pos: Position[Double]): Particle[S, Double]", "member" : "cilib.pso.PSO.createParticle", "link" : "cilib\/pso\/PSO$.html#createParticle[S](f:cilib.Position[Double]=>cilib.pso.Particle[S,Double])(pos:cilib.Position[Double]):cilib.pso.Particle[S,Double]", "kind" : "def"}, {"label" : "better", "tail" : "(a: Particle[S, A], b: Particle[S, A]): Step[A, Boolean]", "member" : "cilib.pso.PSO.better", "link" : "cilib\/pso\/PSO$.html#better[S,A](a:cilib.pso.Particle[S,A],b:cilib.pso.Particle[S,A]):cilib.Step[A,Boolean]", "kind" : "def"}, {"label" : "replace", "tail" : "(entity: Particle[S, Double], p: Position[Double]): Step[Double, Particle[S, Double]]", "member" : "cilib.pso.PSO.replace", "link" : "cilib\/pso\/PSO$.html#replace[S](entity:cilib.pso.Particle[S,Double],p:cilib.Position[Double]):cilib.Step[Double,cilib.pso.Particle[S,Double]]", "kind" : "def"}, {"label" : "acceleration", "tail" : "(collection: NonEmptyList[Particle[S, Double]], x: Particle[S, Double], distance: (Position[Double], Position[Double]) ⇒ Double, rp: Double, rc: Double)(C: HasCharge[S]): Step[Double, Position[Double]]", "member" : "cilib.pso.PSO.acceleration", "link" : "cilib\/pso\/PSO$.html#acceleration[S](collection:scalaz.NonEmptyList[cilib.pso.Particle[S,Double]],x:cilib.pso.Particle[S,Double],distance:(cilib.Position[Double],cilib.Position[Double])=>Double,rp:Double,rc:Double)(implicitC:cilib.HasCharge[S]):cilib.Step[Double,cilib.Position[Double]]", "kind" : "def"}, {"label" : "quantum", "tail" : "(x: Position[Double], r: RVar[Double], dist: (Double, Double) ⇒ RVar[Double]): Step[Double, Position[Double]]", "member" : "cilib.pso.PSO.quantum", "link" : "cilib\/pso\/PSO$.html#quantum(x:cilib.Position[Double],r:cilib.RVar[Double],dist:(Double,Double)=>cilib.RVar[Double]):cilib.Step[Double,cilib.Position[Double]]", "kind" : "def"}, {"label" : "barebones", "tail" : "(p: Particle[S, Double], global: Position[Double])(M: HasMemory[S, Double]): Step[Nothing, Position[Double]]", "member" : "cilib.pso.PSO.barebones", "link" : "cilib\/pso\/PSO$.html#barebones[S](p:cilib.pso.Particle[S,Double],global:cilib.Position[Double])(implicitM:cilib.HasMemory[S,Double]):cilib.Step[Nothing,cilib.Position[Double]]", "kind" : "def"}, {"label" : "gcVelocity", "tail" : "(entity: Particle[S, Double], nbest: Position[Double], w: Double, s: GCParams)(V: HasVelocity[S, Double]): Step[Double, Position[Double]]", "member" : "cilib.pso.PSO.gcVelocity", "link" : "cilib\/pso\/PSO$.html#gcVelocity[S](entity:cilib.pso.Particle[S,Double],nbest:cilib.Position[Double],w:Double,s:cilib.pso.PSO.GCParams)(implicitV:cilib.HasVelocity[S,Double]):cilib.Step[Double,cilib.Position[Double]]", "kind" : "def"}, {"label" : "defaultGCParams", "tail" : "(): GCParams", "member" : "cilib.pso.PSO.defaultGCParams", "link" : "cilib\/pso\/PSO$.html#defaultGCParams:cilib.pso.PSO.GCParams", "kind" : "def"}, {"label" : "GCParams", "tail" : "", "member" : "cilib.pso.PSO.GCParams", "link" : "cilib\/pso\/PSO$.html#GCParamsextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "singleComponentVelocity", "tail" : "(entity: Particle[S, Double], component: Position[Double], w: Double, c: Double)(V: HasVelocity[S, Double]): Step[Double, Position[Double]]", "member" : "cilib.pso.PSO.singleComponentVelocity", "link" : "cilib\/pso\/PSO$.html#singleComponentVelocity[S](entity:cilib.pso.Particle[S,Double],component:cilib.Position[Double],w:Double,c:Double)(implicitV:cilib.HasVelocity[S,Double]):cilib.Step[Double,cilib.Position[Double]]", "kind" : "def"}, {"label" : "updateVelocity", "tail" : "(p: Particle[S, Double], v: Position[Double])(V: HasVelocity[S, Double]): Step[Double, Particle[S, Double]]", "member" : "cilib.pso.PSO.updateVelocity", "link" : "cilib\/pso\/PSO$.html#updateVelocity[S](p:cilib.pso.Particle[S,Double],v:cilib.Position[Double])(implicitV:cilib.HasVelocity[S,Double]):cilib.Step[Double,cilib.pso.Particle[S,Double]]", "kind" : "def"}, {"label" : "updatePBestBounds", "tail" : "(p: Particle[S, Double])(M: HasMemory[S, Double]): Step[Double, Particle[S, Double]]", "member" : "cilib.pso.PSO.updatePBestBounds", "link" : "cilib\/pso\/PSO$.html#updatePBestBounds[S](p:cilib.pso.Particle[S,Double])(implicitM:cilib.HasMemory[S,Double]):cilib.Step[Double,cilib.pso.Particle[S,Double]]", "kind" : "def"}, {"label" : "updatePBest", "tail" : "(p: Particle[S, Double])(M: HasMemory[S, Double]): Step[Double, Particle[S, Double]]", "member" : "cilib.pso.PSO.updatePBest", "link" : "cilib\/pso\/PSO$.html#updatePBest[S](p:cilib.pso.Particle[S,Double])(implicitM:cilib.HasMemory[S,Double]):cilib.Step[Double,cilib.pso.Particle[S,Double]]", "kind" : "def"}, {"label" : "evalParticle", "tail" : "(entity: Particle[S, Double]): Step[Double, Entity[S, Double]]", "member" : "cilib.pso.PSO.evalParticle", "link" : "cilib\/pso\/PSO$.html#evalParticle[S](entity:cilib.pso.Particle[S,Double]):cilib.Step[Double,cilib.Entity[S,Double]]", "kind" : "def"}, {"label" : "stdVelocity", "tail" : "(entity: Particle[S, Double], social: Position[Double], cognitive: Position[Double], w: Double, c1: Double, c2: Double)(V: HasVelocity[S, Double]): Step[Double, Position[Double]]", "member" : "cilib.pso.PSO.stdVelocity", "link" : "cilib\/pso\/PSO$.html#stdVelocity[S](entity:cilib.pso.Particle[S,Double],social:cilib.Position[Double],cognitive:cilib.Position[Double],w:Double,c1:Double,c2:Double)(implicitV:cilib.HasVelocity[S,Double]):cilib.Step[Double,cilib.Position[Double]]", "kind" : "def"}, {"label" : "stdPosition", "tail" : "(c: Particle[S, A], v: Position[A])(A: Module[Position[A], A]): Step[A, Particle[S, A]]", "member" : "cilib.pso.PSO.stdPosition", "link" : "cilib\/pso\/PSO$.html#stdPosition[S,A](c:cilib.pso.Particle[S,A],v:cilib.Position[A])(implicitA:spire.algebra.Module[cilib.Position[A],A]):cilib.Step[A,cilib.pso.Particle[S,A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/pso\/PSO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/pso\/PSO$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/pso\/PSO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/pso\/PSO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/pso\/PSO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/pso\/PSO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/pso\/PSO$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/PSO$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/PSO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/PSO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/pso\/PSO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/pso\/PSO$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/pso\/PSO$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/pso\/PSO$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/pso\/PSO$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/pso\/PSO$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/pso\/PSO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/pso\/PSO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/pso\/PSO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.pso.User", "shortDescription" : "", "members_case class" : [{"member" : "cilib.pso.User#<init>", "error" : "unsupported entity"}, {"label" : "item", "tail" : ": PoolItem[B]", "member" : "cilib.pso.User.item", "link" : "cilib\/pso\/User.html#item:cilib.pso.PoolItem[B]", "kind" : "val"}, {"label" : "user", "tail" : ": A", "member" : "cilib.pso.User.user", "link" : "cilib\/pso\/User.html#user:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/pso\/User.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/pso\/User.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/pso\/User.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/pso\/User.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/pso\/User.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/pso\/User.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/pso\/User.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/User.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/User.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/pso\/User.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/pso\/User.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/pso\/User.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/pso\/User.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/pso\/User.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/pso\/User.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/pso\/User.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/pso\/User.html", "kind" : "case class"}], "cilib.exec" : [{"name" : "cilib.exec.Algorithm", "shortDescription" : "", "members_case class" : [{"member" : "cilib.exec.Algorithm#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "cilib.exec.Algorithm.value", "link" : "cilib\/exec\/Algorithm.html#value:A", "kind" : "val"}, {"label" : "name", "tail" : ": Refined[String, NonEmpty]", "member" : "cilib.exec.Algorithm.name", "link" : "cilib\/exec\/Algorithm.html#name:eu.timepit.refined.api.Refined[String,eu.timepit.refined.collection.NonEmpty]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/exec\/Algorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/exec\/Algorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/exec\/Algorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/exec\/Algorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/exec\/Algorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/exec\/Algorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/exec\/Algorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Algorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Algorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Algorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/exec\/Algorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/exec\/Algorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/exec\/Algorithm.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/exec\/Algorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/exec\/Algorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/exec\/Algorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/exec\/Algorithm.html", "kind" : "case class"}, {"name" : "cilib.exec.Change", "shortDescription" : "", "object" : "cilib\/exec\/Change$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/exec\/Change$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/exec\/Change$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/exec\/Change$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/exec\/Change$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/exec\/Change$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/exec\/Change$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/exec\/Change$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Change$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Change$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Change$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/exec\/Change$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/exec\/Change$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/exec\/Change$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/exec\/Change$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/exec\/Change$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/exec\/Change$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/exec\/Change$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.exec.Env", "shortDescription" : "", "object" : "cilib\/exec\/Env$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/exec\/Env.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/exec\/Env.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/exec\/Env.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/exec\/Env.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/exec\/Env.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/exec\/Env.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/exec\/Env.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Env.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Env.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Env.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/exec\/Env.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/exec\/Env.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/exec\/Env.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/exec\/Env.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/exec\/Env.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/exec\/Env.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/exec\/Env.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/exec\/Env.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/exec\/Env.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "frequency", "tail" : "(n: Refined[Int, Positive]): Stream[Env]", "member" : "cilib.exec.Env.frequency", "link" : "cilib\/exec\/Env$.html#frequency[A](n:eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Positive]):Stream[cilib.exec.Env]", "kind" : "def"}, {"label" : "constant", "tail" : "(): Stream[Env]", "member" : "cilib.exec.Env.constant", "link" : "cilib\/exec\/Env$.html#constant:Stream[cilib.exec.Env]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/exec\/Env$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/exec\/Env$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/exec\/Env$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/exec\/Env$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/exec\/Env$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/exec\/Env$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/exec\/Env$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Env$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Env$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Env$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/exec\/Env$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/exec\/Env$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/exec\/Env$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/exec\/Env$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/exec\/Env$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/exec\/Env$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/exec\/Env$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/exec\/Env$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/exec\/Env$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cilib\/exec\/Env.html", "kind" : "class"}, {"name" : "cilib.exec.Measurement", "shortDescription" : "", "members_case class" : [{"member" : "cilib.exec.Measurement#<init>", "error" : "unsupported entity"}, {"label" : "data", "tail" : ": A", "member" : "cilib.exec.Measurement.data", "link" : "cilib\/exec\/Measurement.html#data:A", "kind" : "val"}, {"label" : "seed", "tail" : ": Long", "member" : "cilib.exec.Measurement.seed", "link" : "cilib\/exec\/Measurement.html#seed:Long", "kind" : "val"}, {"label" : "env", "tail" : ": Env", "member" : "cilib.exec.Measurement.env", "link" : "cilib\/exec\/Measurement.html#env:cilib.exec.Env", "kind" : "val"}, {"label" : "iteration", "tail" : ": Int", "member" : "cilib.exec.Measurement.iteration", "link" : "cilib\/exec\/Measurement.html#iteration:Int", "kind" : "val"}, {"label" : "prob", "tail" : ": String", "member" : "cilib.exec.Measurement.prob", "link" : "cilib\/exec\/Measurement.html#prob:String", "kind" : "val"}, {"label" : "alg", "tail" : ": String", "member" : "cilib.exec.Measurement.alg", "link" : "cilib\/exec\/Measurement.html#alg:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/exec\/Measurement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/exec\/Measurement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/exec\/Measurement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/exec\/Measurement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/exec\/Measurement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/exec\/Measurement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/exec\/Measurement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Measurement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Measurement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Measurement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/exec\/Measurement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/exec\/Measurement.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/exec\/Measurement.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/exec\/Measurement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/exec\/Measurement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/exec\/Measurement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/exec\/Measurement.html", "kind" : "case class"}, {"name" : "cilib.exec.MonadStep", "shortDescription" : "", "members_class" : [{"label" : "pointR", "tail" : "(r: RVar[A]): M[A]", "member" : "cilib.exec.MonadStep.pointR", "link" : "cilib\/exec\/MonadStep.html#pointR[A](r:cilib.RVar[A]):M[A]", "kind" : "def"}, {"member" : "cilib.exec.MonadStep#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/exec\/MonadStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/exec\/MonadStep.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/exec\/MonadStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/exec\/MonadStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/exec\/MonadStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/exec\/MonadStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/exec\/MonadStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/MonadStep.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/MonadStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/MonadStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/exec\/MonadStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/exec\/MonadStep.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/exec\/MonadStep.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/exec\/MonadStep.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/exec\/MonadStep.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/exec\/MonadStep.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/exec\/MonadStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/exec\/MonadStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/exec\/MonadStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "liftR", "tail" : "(r: RVar[A]): M[A]", "member" : "cilib.exec.MonadStep.liftR", "link" : "cilib\/exec\/MonadStep.html#liftR[A](r:cilib.RVar[A]):M[A]", "kind" : "abstract def"}], "class" : "cilib\/exec\/MonadStep.html", "kind" : "class"}, {"name" : "cilib.exec.Problem", "shortDescription" : "", "members_case class" : [{"member" : "cilib.exec.Problem#<init>", "error" : "unsupported entity"}, {"label" : "eval", "tail" : ": RVar[(NonEmptyList[A]) ⇒ Objective[A]]", "member" : "cilib.exec.Problem.eval", "link" : "cilib\/exec\/Problem.html#eval:cilib.RVar[scalaz.NonEmptyList[A]=>cilib.Objective[A]]", "kind" : "val"}, {"label" : "env", "tail" : ": Env", "member" : "cilib.exec.Problem.env", "link" : "cilib\/exec\/Problem.html#env:cilib.exec.Env", "kind" : "val"}, {"label" : "name", "tail" : ": Refined[String, NonEmpty]", "member" : "cilib.exec.Problem.name", "link" : "cilib\/exec\/Problem.html#name:eu.timepit.refined.api.Refined[String,eu.timepit.refined.collection.NonEmpty]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/exec\/Problem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/exec\/Problem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/exec\/Problem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/exec\/Problem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/exec\/Problem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/exec\/Problem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/exec\/Problem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Problem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Problem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Problem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/exec\/Problem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/exec\/Problem.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/exec\/Problem.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/exec\/Problem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/exec\/Problem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/exec\/Problem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/exec\/Problem.html", "kind" : "case class"}, {"name" : "cilib.exec.Progress", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : ": A", "member" : "cilib.exec.Progress.value", "link" : "cilib\/exec\/Progress.html#value:A", "kind" : "val"}, {"label" : "env", "tail" : ": Env", "member" : "cilib.exec.Progress.env", "link" : "cilib\/exec\/Progress.html#env:cilib.exec.Env", "kind" : "val"}, {"label" : "iteration", "tail" : ": Int", "member" : "cilib.exec.Progress.iteration", "link" : "cilib\/exec\/Progress.html#iteration:Int", "kind" : "val"}, {"label" : "seed", "tail" : ": Long", "member" : "cilib.exec.Progress.seed", "link" : "cilib\/exec\/Progress.html#seed:Long", "kind" : "val"}, {"label" : "problem", "tail" : ": String", "member" : "cilib.exec.Progress.problem", "link" : "cilib\/exec\/Progress.html#problem:String", "kind" : "val"}, {"label" : "algorithm", "tail" : ": String", "member" : "cilib.exec.Progress.algorithm", "link" : "cilib\/exec\/Progress.html#algorithm:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/exec\/Progress.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/exec\/Progress.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/exec\/Progress.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/exec\/Progress.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/exec\/Progress.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/exec\/Progress.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/exec\/Progress.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Progress.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Progress.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Progress.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/exec\/Progress.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/exec\/Progress.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/exec\/Progress.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/exec\/Progress.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/exec\/Progress.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/exec\/Progress.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cilib\/exec\/Progress.html", "kind" : "case class"}, {"name" : "cilib.exec.Runner", "shortDescription" : "", "object" : "cilib\/exec\/Runner$.html", "members_object" : [{"label" : "measureWithState", "tail" : "(f: (S, A) ⇒ B)(B: SchemaFor[B]): Process1[Progress[(S, A)], Measurement[B]]", "member" : "cilib.exec.Runner.measureWithState", "link" : "cilib\/exec\/Runner$.html#measureWithState[A,S,B](f:(S,A)=>B)(implicitB:com.sksamuel.avro4s.SchemaFor[B]):scalaz.stream.Process1[cilib.exec.Progress[(S,A)],cilib.exec.Measurement[B]]", "kind" : "def"}, {"label" : "measure", "tail" : "(f: (A) ⇒ B)(B: SchemaFor[B]): Process1[Progress[A], Measurement[B]]", "member" : "cilib.exec.Runner.measure", "link" : "cilib\/exec\/Runner$.html#measure[A,S,B](f:A=>B)(implicitB:com.sksamuel.avro4s.SchemaFor[B]):scalaz.stream.Process1[cilib.exec.Progress[A],cilib.exec.Measurement[B]]", "kind" : "def"}, {"label" : "foldStepS", "tail" : "(initialConfig: Environment[A], initialState: S, rng: RNG, collection: RVar[F[B]], alg: Process[Task, Algorithm[Kleisli[[γ$2$]StepS[A, S, γ$2$], F[B], F[B]]]], env: Process[Task, Problem[A]], onChange: (F[B]) ⇒ RVar[F[B]]): Process[Task, Progress[(S, F[B])]]", "member" : "cilib.exec.Runner.foldStepS", "link" : "cilib\/exec\/Runner$.html#foldStepS[F[_],S,A,B](initialConfig:cilib.Environment[A],initialState:S,rng:cilib.RNG,collection:cilib.RVar[F[B]],alg:scalaz.stream.Process[scalaz.concurrent.Task,cilib.exec.Algorithm[scalaz.Kleisli[[γ$2$]cilib.StepS[A,S,γ$2$],F[B],F[B]]]],env:scalaz.stream.Process[scalaz.concurrent.Task,cilib.exec.Problem[A]],onChange:F[B]=>cilib.RVar[F[B]]):scalaz.stream.Process[scalaz.concurrent.Task,cilib.exec.Progress[(S,F[B])]]", "kind" : "def"}, {"label" : "foldStep", "tail" : "(initialConfig: Environment[A], rng: RNG, collection: RVar[F[B]], alg: Process[Task, Algorithm[Kleisli[[β$0$]Step[A, β$0$], F[B], F[B]]]], env: Process[Task, Problem[A]], onChange: (F[B]) ⇒ RVar[F[B]]): Process[Task, Progress[F[B]]]", "member" : "cilib.exec.Runner.foldStep", "link" : "cilib\/exec\/Runner$.html#foldStep[F[_],A,B](initialConfig:cilib.Environment[A],rng:cilib.RNG,collection:cilib.RVar[F[B]],alg:scalaz.stream.Process[scalaz.concurrent.Task,cilib.exec.Algorithm[scalaz.Kleisli[[β$0$]cilib.Step[A,β$0$],F[B],F[B]]]],env:scalaz.stream.Process[scalaz.concurrent.Task,cilib.exec.Problem[A]],onChange:F[B]=>cilib.RVar[F[B]]):scalaz.stream.Process[scalaz.concurrent.Task,cilib.exec.Progress[F[B]]]", "kind" : "def"}, {"label" : "problem", "tail" : "(name: Refined[String, NonEmpty], state: RVar[S], next: (S) ⇒ RVar[(S, Eval[NonEmptyList, A])])(env: Stream[Env], rng: RNG): Process[Task, Problem[A]]", "member" : "cilib.exec.Runner.problem", "link" : "cilib\/exec\/Runner$.html#problem[S,A](name:eu.timepit.refined.api.Refined[String,eu.timepit.refined.collection.NonEmpty],state:cilib.RVar[S],next:S=>cilib.RVar[(S,cilib.Eval[scalaz.NonEmptyList,A])])(env:Stream[cilib.exec.Env],rng:cilib.RNG):scalaz.stream.Process[scalaz.concurrent.Task,cilib.exec.Problem[A]]", "kind" : "def"}, {"label" : "staticProblem", "tail" : "(name: Refined[String, NonEmpty], eval: RVar[(NonEmptyList[A]) ⇒ Objective[A]], rng: RNG): Process[Task, Problem[A]]", "member" : "cilib.exec.Runner.staticProblem", "link" : "cilib\/exec\/Runner$.html#staticProblem[S,A](name:eu.timepit.refined.api.Refined[String,eu.timepit.refined.collection.NonEmpty],eval:cilib.RVar[scalaz.NonEmptyList[A]=>cilib.Objective[A]],rng:cilib.RNG):scalaz.stream.Process[scalaz.concurrent.Task,cilib.exec.Problem[A]]", "kind" : "def"}, {"label" : "algorithm", "tail" : "(name: Refined[String, NonEmpty], config: A, f: (A) ⇒ Kleisli[M, F[B], F[B]], updater: (A, @@[Int, Iteration]) ⇒ A)(arg0: Monad[M], arg1: Foldable1[F]): Process[Nothing, Algorithm[Kleisli[M, F[B], F[B]]]]", "member" : "cilib.exec.Runner.algorithm", "link" : "cilib\/exec\/Runner$.html#algorithm[M[_],F[_],A,B](name:eu.timepit.refined.api.Refined[String,eu.timepit.refined.collection.NonEmpty],config:A,f:A=>scalaz.Kleisli[M,F[B],F[B]],updater:(A,Int@@cilib.exec.Runner.Iteration)=>A)(implicitevidence$3:scalaz.Monad[M],implicitevidence$4:scalaz.Foldable1[F]):scalaz.stream.Process[Nothing,cilib.exec.Algorithm[scalaz.Kleisli[M,F[B],F[B]]]]", "kind" : "def"}, {"label" : "staticAlgorithm", "tail" : "(name: Refined[String, NonEmpty], a: Kleisli[M, F[A], F[A]])(arg0: Monad[M]): Process0[Algorithm[Kleisli[M, F[A], F[A]]]]", "member" : "cilib.exec.Runner.staticAlgorithm", "link" : "cilib\/exec\/Runner$.html#staticAlgorithm[M[_],F[_],A](name:eu.timepit.refined.api.Refined[String,eu.timepit.refined.collection.NonEmpty],a:scalaz.Kleisli[M,F[A],F[A]])(implicitevidence$2:scalaz.Monad[M]):scalaz.stream.Process0[cilib.exec.Algorithm[scalaz.Kleisli[M,F[A],F[A]]]]", "kind" : "def"}, {"label" : "repeat", "tail" : "(n: Int, alg: Kleisli[M, F[A], F[A]], collection: RVar[F[A]])(arg0: Monad[M], M: MonadStep[M]): M[F[A]]", "member" : "cilib.exec.Runner.repeat", "link" : "cilib\/exec\/Runner$.html#repeat[M[_],F[_],A](n:Int,alg:scalaz.Kleisli[M,F[A],F[A]],collection:cilib.RVar[F[A]])(implicitevidence$1:scalaz.Monad[M],implicitM:cilib.exec.MonadStep[M]):M[F[A]]", "kind" : "def"}, {"label" : "Iteration", "tail" : "", "member" : "cilib.exec.Runner.Iteration", "link" : "cilib\/exec\/Runner$.html#IterationextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/exec\/Runner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/exec\/Runner$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/exec\/Runner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/exec\/Runner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/exec\/Runner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/exec\/Runner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/exec\/Runner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Runner$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Runner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Runner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/exec\/Runner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/exec\/Runner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/exec\/Runner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/exec\/Runner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/exec\/Runner$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/exec\/Runner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/exec\/Runner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/exec\/Runner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/exec\/Runner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cilib.exec.Unchanged", "shortDescription" : "", "object" : "cilib\/exec\/Unchanged$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/exec\/Unchanged$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/exec\/Unchanged$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/exec\/Unchanged$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/exec\/Unchanged$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/exec\/Unchanged$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/exec\/Unchanged$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/exec\/Unchanged$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Unchanged$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Unchanged$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/exec\/Unchanged$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/exec\/Unchanged$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/exec\/Unchanged$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/exec\/Unchanged$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/exec\/Unchanged$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/exec\/Unchanged$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/exec\/Unchanged$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/exec\/Unchanged$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "cilib.de" : [{"name" : "cilib.de.DE", "shortDescription" : "", "object" : "cilib\/de\/DE$.html", "members_object" : [{"label" : "currentToBest", "tail" : "(p_r: Double, p_m: Double, y: Refined[Int, Positive], z: (Double, Position[A]) ⇒ RVar[NonEmptyList[Boolean]])(arg0: Numeric[A], arg1: scalaz.Equal[A]): (NonEmptyList[Individual[S, A]]) ⇒ (Individual[S, A]) ⇒ Step[A, Individual[S, A]]", "member" : "cilib.de.DE.currentToBest", "link" : "cilib\/de\/DE$.html#currentToBest[S,A](p_r:Double,p_m:Double,y:eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Positive],z:(Double,cilib.Position[A])=>cilib.RVar[scalaz.NonEmptyList[Boolean]])(implicitevidence$25:spire.math.Numeric[A],implicitevidence$26:scalaz.Equal[A]):scalaz.NonEmptyList[cilib.de.Individual[S,A]]=>(cilib.de.Individual[S,A]=>cilib.Step[A,cilib.de.Individual[S,A]])", "kind" : "def"}, {"label" : "randToBest", "tail" : "(p_r: Double, p_m: Double, gamma: Double, y: Refined[Int, Positive], z: (Double, Position[A]) ⇒ RVar[NonEmptyList[Boolean]])(arg0: Numeric[A], arg1: scalaz.Equal[A]): (NonEmptyList[Individual[S, A]]) ⇒ (Individual[S, A]) ⇒ Step[A, Individual[S, A]]", "member" : "cilib.de.DE.randToBest", "link" : "cilib\/de\/DE$.html#randToBest[S,A](p_r:Double,p_m:Double,gamma:Double,y:eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Positive],z:(Double,cilib.Position[A])=>cilib.RVar[scalaz.NonEmptyList[Boolean]])(implicitevidence$23:spire.math.Numeric[A],implicitevidence$24:scalaz.Equal[A]):scalaz.NonEmptyList[cilib.de.Individual[S,A]]=>(cilib.de.Individual[S,A]=>cilib.Step[A,cilib.de.Individual[S,A]])", "kind" : "def"}, {"label" : "rand_exp", "tail" : "(p_r: Double, p_m: Double, y: Refined[Int, Positive])(arg0: Numeric[A], arg1: scalaz.Equal[A]): (NonEmptyList[Individual[S, A]]) ⇒ (Individual[S, A]) ⇒ Step[A, Individual[S, A]]", "member" : "cilib.de.DE.rand_exp", "link" : "cilib\/de\/DE$.html#rand_exp[S,A](p_r:Double,p_m:Double,y:eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Positive])(implicitevidence$21:spire.math.Numeric[A],implicitevidence$22:scalaz.Equal[A]):scalaz.NonEmptyList[cilib.de.Individual[S,A]]=>(cilib.de.Individual[S,A]=>cilib.Step[A,cilib.de.Individual[S,A]])", "kind" : "def"}, {"label" : "best_exp", "tail" : "(p_r: Double, p_m: Double, y: Refined[Int, Positive])(arg0: Numeric[A], arg1: scalaz.Equal[A]): (NonEmptyList[Individual[S, A]]) ⇒ (Individual[S, A]) ⇒ Step[A, Individual[S, A]]", "member" : "cilib.de.DE.best_exp", "link" : "cilib\/de\/DE$.html#best_exp[S,A](p_r:Double,p_m:Double,y:eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Positive])(implicitevidence$19:spire.math.Numeric[A],implicitevidence$20:scalaz.Equal[A]):scalaz.NonEmptyList[cilib.de.Individual[S,A]]=>(cilib.de.Individual[S,A]=>cilib.Step[A,cilib.de.Individual[S,A]])", "kind" : "def"}, {"label" : "rand_bin", "tail" : "(p_r: Double, p_m: Double, y: Refined[Int, Positive])(arg0: Numeric[A], arg1: scalaz.Equal[A]): (NonEmptyList[Individual[S, A]]) ⇒ (Individual[S, A]) ⇒ Step[A, Individual[S, A]]", "member" : "cilib.de.DE.rand_bin", "link" : "cilib\/de\/DE$.html#rand_bin[S,A](p_r:Double,p_m:Double,y:eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Positive])(implicitevidence$17:spire.math.Numeric[A],implicitevidence$18:scalaz.Equal[A]):scalaz.NonEmptyList[cilib.de.Individual[S,A]]=>(cilib.de.Individual[S,A]=>cilib.Step[A,cilib.de.Individual[S,A]])", "kind" : "def"}, {"label" : "best_bin", "tail" : "(p_r: Double, p_m: Double, y: Refined[Int, Positive])(arg0: Numeric[A], arg1: scalaz.Equal[A]): (NonEmptyList[Individual[S, A]]) ⇒ (Individual[S, A]) ⇒ Step[A, Individual[S, A]]", "member" : "cilib.de.DE.best_bin", "link" : "cilib\/de\/DE$.html#best_bin[S,A](p_r:Double,p_m:Double,y:eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Positive])(implicitevidence$15:spire.math.Numeric[A],implicitevidence$16:scalaz.Equal[A]):scalaz.NonEmptyList[cilib.de.Individual[S,A]]=>(cilib.de.Individual[S,A]=>cilib.Step[A,cilib.de.Individual[S,A]])", "kind" : "def"}, {"label" : "best_1_exp", "tail" : "(p_r: Double, p_m: Double)(arg0: Numeric[A], arg1: scalaz.Equal[A]): (NonEmptyList[Individual[Nothing, A]]) ⇒ (Individual[Nothing, A]) ⇒ Step[A, Individual[Nothing, A]]", "member" : "cilib.de.DE.best_1_exp", "link" : "cilib\/de\/DE$.html#best_1_exp[S,A](p_r:Double,p_m:Double)(implicitevidence$13:spire.math.Numeric[A],implicitevidence$14:scalaz.Equal[A]):scalaz.NonEmptyList[cilib.de.Individual[Nothing,A]]=>(cilib.de.Individual[Nothing,A]=>cilib.Step[A,cilib.de.Individual[Nothing,A]])", "kind" : "def"}, {"label" : "rand_1_bin", "tail" : "(p_r: Double, p_m: Double)(arg0: Numeric[A], arg1: scalaz.Equal[A]): (NonEmptyList[Individual[Nothing, A]]) ⇒ (Individual[Nothing, A]) ⇒ Step[A, Individual[Nothing, A]]", "member" : "cilib.de.DE.rand_1_bin", "link" : "cilib\/de\/DE$.html#rand_1_bin[S,A](p_r:Double,p_m:Double)(implicitevidence$11:spire.math.Numeric[A],implicitevidence$12:scalaz.Equal[A]):scalaz.NonEmptyList[cilib.de.Individual[Nothing,A]]=>(cilib.de.Individual[Nothing,A]=>cilib.Step[A,cilib.de.Individual[Nothing,A]])", "kind" : "def"}, {"label" : "best_1_bin", "tail" : "(p_r: Double, p_m: Double)(arg0: Numeric[A], arg1: scalaz.Equal[A]): (NonEmptyList[Individual[Nothing, A]]) ⇒ (Individual[Nothing, A]) ⇒ Step[A, Individual[Nothing, A]]", "member" : "cilib.de.DE.best_1_bin", "link" : "cilib\/de\/DE$.html#best_1_bin[S,A](p_r:Double,p_m:Double)(implicitevidence$9:spire.math.Numeric[A],implicitevidence$10:scalaz.Equal[A]):scalaz.NonEmptyList[cilib.de.Individual[Nothing,A]]=>(cilib.de.Individual[Nothing,A]=>cilib.Step[A,cilib.de.Individual[Nothing,A]])", "kind" : "def"}, {"label" : "currentToBestSelection", "tail" : "(p_m: Double)(collection: NonEmptyList[Entity[S, A]])(arg0: Numeric[A]): Step[A, (Entity[S, A], Position[A])]", "member" : "cilib.de.DE.currentToBestSelection", "link" : "cilib\/de\/DE$.html#currentToBestSelection[S,A](p_m:Double)(collection:scalaz.NonEmptyList[cilib.Entity[S,A]])(implicitevidence$8:spire.math.Numeric[A]):cilib.Step[A,(cilib.Entity[S,A],cilib.Position[A])]", "kind" : "def"}, {"label" : "randToBestSelection", "tail" : "(gamma: Double)(collection: NonEmptyList[Entity[S, A]])(arg0: Numeric[A]): Step[A, (Entity[S, A], Position[A])]", "member" : "cilib.de.DE.randToBestSelection", "link" : "cilib\/de\/DE$.html#randToBestSelection[S,A](gamma:Double)(collection:scalaz.NonEmptyList[cilib.Entity[S,A]])(implicitevidence$7:spire.math.Numeric[A]):cilib.Step[A,(cilib.Entity[S,A],cilib.Position[A])]", "kind" : "def"}, {"label" : "bestSelection", "tail" : "(collection: NonEmptyList[Entity[S, A]]): Step[A, (Entity[S, A], Position[A])]", "member" : "cilib.de.DE.bestSelection", "link" : "cilib\/de\/DE$.html#bestSelection[S,A](collection:scalaz.NonEmptyList[cilib.Entity[S,A]]):cilib.Step[A,(cilib.Entity[S,A],cilib.Position[A])]", "kind" : "def"}, {"label" : "randSelection", "tail" : "(collection: NonEmptyList[Entity[S, A]]): Step[A, (Entity[S, A], Position[A])]", "member" : "cilib.de.DE.randSelection", "link" : "cilib\/de\/DE$.html#randSelection[S,A](collection:scalaz.NonEmptyList[cilib.Entity[S,A]]):cilib.Step[A,(cilib.Entity[S,A],cilib.Position[A])]", "kind" : "def"}, {"label" : "exp", "tail" : "(p_r: Double, parent: F[A])(arg0: Foldable1[F]): RVar[NonEmptyList[Boolean]]", "member" : "cilib.de.DE.exp", "link" : "cilib\/de\/DE$.html#exp[F[_],A](p_r:Double,parent:F[A])(implicitevidence$6:scalaz.Foldable1[F]):cilib.RVar[scalaz.NonEmptyList[Boolean]]", "kind" : "def"}, {"label" : "bin", "tail" : "(p_r: Double, parent: F[A])(arg0: Foldable1[F]): RVar[NonEmptyList[Boolean]]", "member" : "cilib.de.DE.bin", "link" : "cilib\/de\/DE$.html#bin[F[_],A](p_r:Double,parent:F[A])(implicitevidence$5:scalaz.Foldable1[F]):cilib.RVar[scalaz.NonEmptyList[Boolean]]", "kind" : "def"}, {"label" : "crossover", "tail" : "(target: Individual[S, A], trial: Position[A], pivots: NonEmptyList[Boolean]): Entity[S, A]", "member" : "cilib.de.DE.crossover", "link" : "cilib\/de\/DE$.html#crossover[S,A](target:cilib.de.Individual[S,A],trial:cilib.Position[A],pivots:scalaz.NonEmptyList[Boolean]):cilib.Entity[S,A]", "kind" : "def"}, {"label" : "basicMutation", "tail" : "(p_m: A, selection: (NonEmptyList[Individual[S, A]]) ⇒ Step[A, (Individual[S, A], Position[A])], y: Refined[Int, Positive], collection: NonEmptyList[Individual[S, A]], x: Individual[S, A])(arg0: Rng[A], arg1: scalaz.Equal[A]): Step[A, Position[A]]", "member" : "cilib.de.DE.basicMutation", "link" : "cilib\/de\/DE$.html#basicMutation[S,A](p_m:A,selection:scalaz.NonEmptyList[cilib.de.Individual[S,A]]=>cilib.Step[A,(cilib.de.Individual[S,A],cilib.Position[A])],y:eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Positive],collection:scalaz.NonEmptyList[cilib.de.Individual[S,A]],x:cilib.de.Individual[S,A])(implicitevidence$3:spire.algebra.Rng[A],implicitevidence$4:scalaz.Equal[A]):cilib.Step[A,cilib.Position[A]]", "kind" : "def"}, {"label" : "de", "tail" : "(p_r: Double, p_m: Double, targetSelection: (NonEmptyList[Individual[S, A]]) ⇒ Step[A, (Individual[S, A], Position[A])], y: Refined[Int, Positive], z: (Double, Position[A]) ⇒ RVar[NonEmptyList[Boolean]])(arg0: Numeric[A], arg1: scalaz.Equal[A]): (NonEmptyList[Individual[S, A]]) ⇒ (Individual[S, A]) ⇒ Step[A, Individual[S, A]]", "member" : "cilib.de.DE.de", "link" : "cilib\/de\/DE$.html#de[S,A](p_r:Double,p_m:Double,targetSelection:scalaz.NonEmptyList[cilib.de.Individual[S,A]]=>cilib.Step[A,(cilib.de.Individual[S,A],cilib.Position[A])],y:eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Positive],z:(Double,cilib.Position[A])=>cilib.RVar[scalaz.NonEmptyList[Boolean]])(implicitevidence$1:spire.math.Numeric[A],implicitevidence$2:scalaz.Equal[A]):scalaz.NonEmptyList[cilib.de.Individual[S,A]]=>(cilib.de.Individual[S,A]=>cilib.Step[A,cilib.de.Individual[S,A]])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cilib\/de\/DE$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cilib\/de\/DE$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cilib\/de\/DE$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cilib\/de\/DE$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cilib\/de\/DE$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cilib\/de\/DE$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cilib\/de\/DE$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/de\/DE$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/de\/DE$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cilib\/de\/DE$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cilib\/de\/DE$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cilib\/de\/DE$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cilib\/de\/DE$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cilib\/de\/DE$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "cilib\/de\/DE$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cilib\/de\/DE$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "cilib\/de\/DE$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cilib\/de\/DE$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cilib\/de\/DE$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scalaz" : []};